/*
 * generated by Xtext 2.26.0
 */
package xtext.factoryLang.web

import org.eclipse.xtext.web.server.XtextServiceDispatcher
import org.eclipse.xtext.web.server.persistence.IResourceBaseProvider
import org.eclipse.xtext.web.server.model.IWebResourceSetProvider
import com.google.inject.Binder
import org.eclipse.xtext.web.server.persistence.IServerResourceHandler
import org.eclipse.xtext.web.server.persistence.FileResourceHandler
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor
import org.eclipse.xtext.web.server.validation.ValidationService

/**
 * Use this class to register additional components to be used within the web application.
 */
 @FinalFieldsConstructor
class FactoryLangWebModule extends AbstractFactoryLangWebModule {
	val IResourceBaseProvider resourceBaseProvider
	
	def Class<? extends IWebResourceSetProvider> bindIWebResourceSetProvider() {
		return FactoryLangResourceSetProvider
	}
	
	def void configureResourceBaseProvider(Binder binder) {
		if (resourceBaseProvider !== null) binder.bind(IResourceBaseProvider).toInstance(resourceBaseProvider)
		binder.bind(ValidationService).to(FactoryLangValidationService)
	}

	def Class<? extends IServerResourceHandler> bindIServerResourceHandler() {
		return FileResourceHandler
	}
	
	def Class<? extends XtextServiceDispatcher> bindXtextServiceDispatcher() {
		return FactoryLangServiceDispatcher
	}
}
