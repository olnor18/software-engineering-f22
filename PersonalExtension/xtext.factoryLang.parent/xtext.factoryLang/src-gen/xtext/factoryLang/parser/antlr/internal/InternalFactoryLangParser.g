/*
 * generated by Xtext 2.26.0
 */
parser grammar InternalFactoryLangParser;

options {
	tokenVocab=InternalFactoryLangLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package xtext.factoryLang.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import xtext.factoryLang.services.FactoryLangGrammarAccess;

}

@members {

 	private FactoryLangGrammarAccess grammarAccess;

    public InternalFactoryLangParser(TokenStream input, FactoryLangGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected FactoryLangGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getConfigurationsConfigurationParserRuleCall_0_0());
				}
				lv_configurations_0_0=ruleConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"configurations",
						lv_configurations_0_0,
						"xtext.factoryLang.FactoryLang.Configuration");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_0());
				}
				lv_statements_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"statements",
						lv_statements_1_0,
						"xtext.factoryLang.FactoryLang.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	iv_ruleConfiguration=ruleConfiguration
	{ $current=$iv_ruleConfiguration.current; }
	EOF;

// Rule Configuration
ruleConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Create
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigurationAccess().getCreateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getDeviceDeviceParserRuleCall_1_0());
				}
				lv_device_1_0=ruleDevice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					set(
						$current,
						"device",
						lv_device_1_0,
						"xtext.factoryLang.FactoryLang.Device");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getCraneParserRuleCall_0());
		}
		this_Crane_0=ruleCrane
		{
			$current = $this_Crane_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getDiskParserRuleCall_1());
		}
		this_Disk_1=ruleDisk
		{
			$current = $this_Disk_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceAccess().getCameraParserRuleCall_2());
		}
		this_Camera_2=ruleCamera
		{
			$current = $this_Camera_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCrane
entryRuleCrane returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneRule()); }
	iv_ruleCrane=ruleCrane
	{ $current=$iv_ruleCrane.current; }
	EOF;

// Rule Crane
ruleCrane returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCraneAccess().getCraneAction_0(),
					$current);
			}
		)
		otherlv_1=Crane
		{
			newLeafNode(otherlv_1, grammarAccess.getCraneAccess().getCraneKeyword_1());
		}
		otherlv_2=Named
		{
			newLeafNode(otherlv_2, grammarAccess.getCraneAccess().getNamedKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getCraneAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getCraneAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCraneAccess().getTargetsCraneParameterParserRuleCall_5_0());
				}
				lv_targets_5_0=ruleCraneParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCraneRule());
					}
					add(
						$current,
						"targets",
						lv_targets_5_0,
						"xtext.factoryLang.FactoryLang.CraneParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getCraneAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleCraneParameter
entryRuleCraneParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneParameterRule()); }
	iv_ruleCraneParameter=ruleCraneParameter
	{ $current=$iv_ruleCraneParameter.current; }
	EOF;

// Rule CraneParameter
ruleCraneParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getCraneParameterAccess().getCranePositionParameterParserRuleCall());
	}
	this_CranePositionParameter_0=ruleCranePositionParameter
	{
		$current = $this_CranePositionParameter_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleCranePositionParameter
entryRuleCranePositionParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCranePositionParameterRule()); }
	iv_ruleCranePositionParameter=ruleCranePositionParameter
	{ $current=$iv_ruleCranePositionParameter.current; }
	EOF;

// Rule CranePositionParameter
ruleCranePositionParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCranePositionParameterAccess().getCranePositionParameterAction_0(),
					$current);
			}
		)
		otherlv_1=With
		{
			newLeafNode(otherlv_1, grammarAccess.getCranePositionParameterAccess().getWithKeyword_1());
		}
		otherlv_2=Position
		{
			newLeafNode(otherlv_2, grammarAccess.getCranePositionParameterAccess().getPositionKeyword_2());
		}
		otherlv_3=At
		{
			newLeafNode(otherlv_3, grammarAccess.getCranePositionParameterAccess().getAtKeyword_3());
		}
		(
			(
				lv_degree_4_0=RULE_INT
				{
					newLeafNode(lv_degree_4_0, grammarAccess.getCranePositionParameterAccess().getDegreeINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCranePositionParameterRule());
					}
					setWithLastConsumed(
						$current,
						"degree",
						lv_degree_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=Named
		{
			newLeafNode(otherlv_5, grammarAccess.getCranePositionParameterAccess().getNamedKeyword_5());
		}
		(
			(
				lv_name_6_0=RULE_ID
				{
					newLeafNode(lv_name_6_0, grammarAccess.getCranePositionParameterAccess().getNameIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCranePositionParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDisk
entryRuleDisk returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskRule()); }
	iv_ruleDisk=ruleDisk
	{ $current=$iv_ruleDisk.current; }
	EOF;

// Rule Disk
ruleDisk returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskAccess().getDiskAction_0(),
					$current);
			}
		)
		otherlv_1=Disk
		{
			newLeafNode(otherlv_1, grammarAccess.getDiskAccess().getDiskKeyword_1());
		}
		otherlv_2=Named
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskAccess().getNamedKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDiskAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getDiskAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDiskAccess().getSlotParameterDiskSlotParameterParserRuleCall_5_0());
				}
				lv_slotParameter_5_0=ruleDiskSlotParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiskRule());
					}
					set(
						$current,
						"slotParameter",
						lv_slotParameter_5_0,
						"xtext.factoryLang.FactoryLang.DiskSlotParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDiskAccess().getTargetsDiskParameterParserRuleCall_6_0());
				}
				lv_targets_6_0=ruleDiskParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiskRule());
					}
					add(
						$current,
						"targets",
						lv_targets_6_0,
						"xtext.factoryLang.FactoryLang.DiskParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_7=RULE_END
		{
			newLeafNode(this_END_7, grammarAccess.getDiskAccess().getENDTerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleDiskParameter
entryRuleDiskParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskParameterRule()); }
	iv_ruleDiskParameter=ruleDiskParameter
	{ $current=$iv_ruleDiskParameter.current; }
	EOF;

// Rule DiskParameter
ruleDiskParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getDiskParameterAccess().getDiskZoneParameterParserRuleCall());
	}
	this_DiskZoneParameter_0=ruleDiskZoneParameter
	{
		$current = $this_DiskZoneParameter_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleDiskSlotParameter
entryRuleDiskSlotParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskSlotParameterRule()); }
	iv_ruleDiskSlotParameter=ruleDiskSlotParameter
	{ $current=$iv_ruleDiskSlotParameter.current; }
	EOF;

// Rule DiskSlotParameter
ruleDiskSlotParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskSlotParameterAccess().getDiskSlotParameterAction_0(),
					$current);
			}
		)
		otherlv_1=With
		{
			newLeafNode(otherlv_1, grammarAccess.getDiskSlotParameterAccess().getWithKeyword_1());
		}
		(
			(
				lv_size_2_0=RULE_INT
				{
					newLeafNode(lv_size_2_0, grammarAccess.getDiskSlotParameterAccess().getSizeINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskSlotParameterRule());
					}
					setWithLastConsumed(
						$current,
						"size",
						lv_size_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=Slots
		{
			newLeafNode(otherlv_3, grammarAccess.getDiskSlotParameterAccess().getSlotsKeyword_3());
		}
	)
;

// Entry rule entryRuleDiskZoneParameter
entryRuleDiskZoneParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskZoneParameterRule()); }
	iv_ruleDiskZoneParameter=ruleDiskZoneParameter
	{ $current=$iv_ruleDiskZoneParameter.current; }
	EOF;

// Rule DiskZoneParameter
ruleDiskZoneParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskZoneParameterAccess().getDiskZoneParameterAction_0(),
					$current);
			}
		)
		otherlv_1=With
		{
			newLeafNode(otherlv_1, grammarAccess.getDiskZoneParameterAccess().getWithKeyword_1());
		}
		otherlv_2=Zone
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskZoneParameterAccess().getZoneKeyword_2());
		}
		otherlv_3=Named
		{
			newLeafNode(otherlv_3, grammarAccess.getDiskZoneParameterAccess().getNamedKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getDiskZoneParameterAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskZoneParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5=At
		{
			newLeafNode(otherlv_5, grammarAccess.getDiskZoneParameterAccess().getAtKeyword_5());
		}
		otherlv_6=Slot
		{
			newLeafNode(otherlv_6, grammarAccess.getDiskZoneParameterAccess().getSlotKeyword_6());
		}
		(
			(
				lv_slot_7_0=RULE_INT
				{
					newLeafNode(lv_slot_7_0, grammarAccess.getDiskZoneParameterAccess().getSlotINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskZoneParameterRule());
					}
					setWithLastConsumed(
						$current,
						"slot",
						lv_slot_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleCamera
entryRuleCamera returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraRule()); }
	iv_ruleCamera=ruleCamera
	{ $current=$iv_ruleCamera.current; }
	EOF;

// Rule Camera
ruleCamera returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCameraAccess().getCameraAction_0(),
					$current);
			}
		)
		otherlv_1=Camera
		{
			newLeafNode(otherlv_1, grammarAccess.getCameraAccess().getCameraKeyword_1());
		}
		otherlv_2=Named
		{
			newLeafNode(otherlv_2, grammarAccess.getCameraAccess().getNamedKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getCameraAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCameraRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getCameraAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraAccess().getTargetsCameraParameterParserRuleCall_5_0());
				}
				lv_targets_5_0=ruleCameraParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraRule());
					}
					add(
						$current,
						"targets",
						lv_targets_5_0,
						"xtext.factoryLang.FactoryLang.CameraParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getCameraAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleCameraParameter
entryRuleCameraParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraParameterRule()); }
	iv_ruleCameraParameter=ruleCameraParameter
	{ $current=$iv_ruleCameraParameter.current; }
	EOF;

// Rule CameraParameter
ruleCameraParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getCameraParameterAccess().getCameraColorParameterParserRuleCall());
	}
	this_CameraColorParameter_0=ruleCameraColorParameter
	{
		$current = $this_CameraColorParameter_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleCameraColorParameter
entryRuleCameraColorParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraColorParameterRule()); }
	iv_ruleCameraColorParameter=ruleCameraColorParameter
	{ $current=$iv_ruleCameraColorParameter.current; }
	EOF;

// Rule CameraColorParameter
ruleCameraColorParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCameraColorParameterAccess().getCameraColorParameterAction_0(),
					$current);
			}
		)
		otherlv_1=With
		{
			newLeafNode(otherlv_1, grammarAccess.getCameraColorParameterAccess().getWithKeyword_1());
		}
		otherlv_2=Scannable
		{
			newLeafNode(otherlv_2, grammarAccess.getCameraColorParameterAccess().getScannableKeyword_2());
		}
		otherlv_3=Color
		{
			newLeafNode(otherlv_3, grammarAccess.getCameraColorParameterAccess().getColorKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraColorParameterAccess().getColorCOLOREnumRuleCall_4_0());
				}
				lv_color_4_0=ruleCOLOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraColorParameterRule());
					}
					set(
						$current,
						"color",
						lv_color_4_0,
						"xtext.factoryLang.FactoryLang.COLOR");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getConditionalParserRuleCall_0());
		}
		this_Conditional_0=ruleConditional
		{
			$current = $this_Conditional_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getOperationParserRuleCall_1());
		}
		this_Operation_1=ruleOperation
		{
			$current = $this_Operation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLoopParserRuleCall_2());
		}
		this_Loop_2=ruleLoop
		{
			$current = $this_Loop_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConditional
entryRuleConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalRule()); }
	iv_ruleConditional=ruleConditional
	{ $current=$iv_ruleConditional.current; }
	EOF;

// Rule Conditional
ruleConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionalAccess().getDeviceConditionalParserRuleCall_0());
		}
		this_DeviceConditional_0=ruleDeviceConditional
		{
			$current = $this_DeviceConditional_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionalAccess().getVariableConditionalParserRuleCall_1());
		}
		this_VariableConditional_1=ruleVariableConditional
		{
			$current = $this_VariableConditional_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDeviceConditional
entryRuleDeviceConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceConditionalRule()); }
	iv_ruleDeviceConditional=ruleDeviceConditional
	{ $current=$iv_ruleDeviceConditional.current; }
	EOF;

// Rule DeviceConditional
ruleDeviceConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeviceConditionalAccess().getDeviceConditionalAction_0(),
					$current);
			}
		)
		otherlv_1=If
		{
			newLeafNode(otherlv_1, grammarAccess.getDeviceConditionalAccess().getIfKeyword_1());
		}
		otherlv_2=Device
		{
			newLeafNode(otherlv_2, grammarAccess.getDeviceConditionalAccess().getDeviceKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceConditionalRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getDeviceConditionalAccess().getDeviceDeviceCrossReference_3_0());
				}
			)
		)
		otherlv_4=Is
		{
			newLeafNode(otherlv_4, grammarAccess.getDeviceConditionalAccess().getIsKeyword_4());
		}
		(
			(
				lv_not_operator_5_0=Not
				{
					newLeafNode(lv_not_operator_5_0, grammarAccess.getDeviceConditionalAccess().getNot_operatorNotKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceConditionalRule());
					}
					setWithLastConsumed($current, "not_operator", lv_not_operator_5_0, "not");
				}
			)
		)?
		(
			otherlv_6=At
			{
				newLeafNode(otherlv_6, grammarAccess.getDeviceConditionalAccess().getAtKeyword_6());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceConditionalAccess().getDeviceValueDeviceValueParserRuleCall_7_0());
				}
				lv_deviceValue_7_0=ruleDeviceValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceConditionalRule());
					}
					set(
						$current,
						"deviceValue",
						lv_deviceValue_7_0,
						"xtext.factoryLang.FactoryLang.DeviceValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=Then
		{
			newLeafNode(otherlv_8, grammarAccess.getDeviceConditionalAccess().getThenKeyword_8());
		}
		this_BEGIN_9=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_9, grammarAccess.getDeviceConditionalAccess().getBEGINTerminalRuleCall_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceConditionalAccess().getStatementsStatementParserRuleCall_10_0());
				}
				lv_statements_10_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceConditionalRule());
					}
					add(
						$current,
						"statements",
						lv_statements_10_0,
						"xtext.factoryLang.FactoryLang.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_11=RULE_END
		{
			newLeafNode(this_END_11, grammarAccess.getDeviceConditionalAccess().getENDTerminalRuleCall_11());
		}
	)
;

// Entry rule entryRuleVariableConditional
entryRuleVariableConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableConditionalRule()); }
	iv_ruleVariableConditional=ruleVariableConditional
	{ $current=$iv_ruleVariableConditional.current; }
	EOF;

// Rule VariableConditional
ruleVariableConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariableConditionalAccess().getVariableConditionalAction_0(),
					$current);
			}
		)
		otherlv_1=If
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableConditionalAccess().getIfKeyword_1());
		}
		otherlv_2=Variable
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableConditionalAccess().getVariableKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableConditionalRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getVariableConditionalAccess().getVariableVariableCrossReference_3_0());
				}
			)
		)
		otherlv_4=Is
		{
			newLeafNode(otherlv_4, grammarAccess.getVariableConditionalAccess().getIsKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableConditionalAccess().getComparison_operatorCOMPARISON_OPERATOREnumRuleCall_5_0());
				}
				lv_comparison_operator_5_0=ruleCOMPARISON_OPERATOR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableConditionalRule());
					}
					set(
						$current,
						"comparison_operator",
						lv_comparison_operator_5_0,
						"xtext.factoryLang.FactoryLang.COMPARISON_OPERATOR");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableConditionalAccess().getVariableValueVariableValueParserRuleCall_6_0());
				}
				lv_variableValue_6_0=ruleVariableValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableConditionalRule());
					}
					set(
						$current,
						"variableValue",
						lv_variableValue_6_0,
						"xtext.factoryLang.FactoryLang.VariableValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=Then
		{
			newLeafNode(otherlv_7, grammarAccess.getVariableConditionalAccess().getThenKeyword_7());
		}
		this_BEGIN_8=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_8, grammarAccess.getVariableConditionalAccess().getBEGINTerminalRuleCall_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableConditionalAccess().getStatementsStatementParserRuleCall_9_0());
				}
				lv_statements_9_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableConditionalRule());
					}
					add(
						$current,
						"statements",
						lv_statements_9_0,
						"xtext.factoryLang.FactoryLang.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_10=RULE_END
		{
			newLeafNode(this_END_10, grammarAccess.getVariableConditionalAccess().getENDTerminalRuleCall_10());
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationAccess().getCraneOperationParserRuleCall_0());
		}
		this_CraneOperation_0=ruleCraneOperation
		{
			$current = $this_CraneOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getDiskOperationParserRuleCall_1());
		}
		this_DiskOperation_1=ruleDiskOperation
		{
			$current = $this_DiskOperation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getCameraOperationParserRuleCall_2());
		}
		this_CameraOperation_2=ruleCameraOperation
		{
			$current = $this_CameraOperation_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCraneOperation
entryRuleCraneOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneOperationRule()); }
	iv_ruleCraneOperation=ruleCraneOperation
	{ $current=$iv_ruleCraneOperation.current; }
	EOF;

// Rule CraneOperation
ruleCraneOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCraneOperationAccess().getCranePickupOperationParserRuleCall_0());
		}
		this_CranePickupOperation_0=ruleCranePickupOperation
		{
			$current = $this_CranePickupOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCraneOperationAccess().getCraneDropOperationParserRuleCall_1());
		}
		this_CraneDropOperation_1=ruleCraneDropOperation
		{
			$current = $this_CraneDropOperation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCranePickupOperation
entryRuleCranePickupOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCranePickupOperationRule()); }
	iv_ruleCranePickupOperation=ruleCranePickupOperation
	{ $current=$iv_ruleCranePickupOperation.current; }
	EOF;

// Rule CranePickupOperation
ruleCranePickupOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCranePickupOperationAccess().getCranePickupOperationAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCranePickupOperationRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCranePickupOperationAccess().getDeviceCraneCrossReference_1_0());
				}
			)
		)
		otherlv_2=Pickup
		{
			newLeafNode(otherlv_2, grammarAccess.getCranePickupOperationAccess().getPickupKeyword_2());
		}
		otherlv_3=Item
		{
			newLeafNode(otherlv_3, grammarAccess.getCranePickupOperationAccess().getItemKeyword_3());
		}
		otherlv_4=At
		{
			newLeafNode(otherlv_4, grammarAccess.getCranePickupOperationAccess().getAtKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCranePickupOperationRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getCranePickupOperationAccess().getTargetCraneParameterCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleCraneDropOperation
entryRuleCraneDropOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneDropOperationRule()); }
	iv_ruleCraneDropOperation=ruleCraneDropOperation
	{ $current=$iv_ruleCraneDropOperation.current; }
	EOF;

// Rule CraneDropOperation
ruleCraneDropOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCraneDropOperationAccess().getCraneDropOperationAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneDropOperationRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCraneDropOperationAccess().getDeviceCraneCrossReference_1_0());
				}
			)
		)
		otherlv_2=Drop
		{
			newLeafNode(otherlv_2, grammarAccess.getCraneDropOperationAccess().getDropKeyword_2());
		}
		otherlv_3=Item
		{
			newLeafNode(otherlv_3, grammarAccess.getCraneDropOperationAccess().getItemKeyword_3());
		}
		otherlv_4=At
		{
			newLeafNode(otherlv_4, grammarAccess.getCraneDropOperationAccess().getAtKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneDropOperationRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getCraneDropOperationAccess().getTargetCraneParameterCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDiskOperation
entryRuleDiskOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskOperationRule()); }
	iv_ruleDiskOperation=ruleDiskOperation
	{ $current=$iv_ruleDiskOperation.current; }
	EOF;

// Rule DiskOperation
ruleDiskOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDiskOperationAccess().getDiskMoveEmptySlotOperationParserRuleCall_0());
		}
		this_DiskMoveEmptySlotOperation_0=ruleDiskMoveEmptySlotOperation
		{
			$current = $this_DiskMoveEmptySlotOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDiskOperationAccess().getDiskMoveVariableSlotOperationParserRuleCall_1());
		}
		this_DiskMoveVariableSlotOperation_1=ruleDiskMoveVariableSlotOperation
		{
			$current = $this_DiskMoveVariableSlotOperation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDiskOperationAccess().getDiskMoveSlotOperationParserRuleCall_2());
		}
		this_DiskMoveSlotOperation_2=ruleDiskMoveSlotOperation
		{
			$current = $this_DiskMoveSlotOperation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDiskOperationAccess().getDiskMarkSlotOperationParserRuleCall_3());
		}
		this_DiskMarkSlotOperation_3=ruleDiskMarkSlotOperation
		{
			$current = $this_DiskMarkSlotOperation_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDiskOperationAccess().getDiskWaitOperationParserRuleCall_4());
		}
		this_DiskWaitOperation_4=ruleDiskWaitOperation
		{
			$current = $this_DiskWaitOperation_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDiskMoveSlotOperation
entryRuleDiskMoveSlotOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskMoveSlotOperationRule()); }
	iv_ruleDiskMoveSlotOperation=ruleDiskMoveSlotOperation
	{ $current=$iv_ruleDiskMoveSlotOperation.current; }
	EOF;

// Rule DiskMoveSlotOperation
ruleDiskMoveSlotOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskMoveSlotOperationAccess().getDiskMoveSlotOperationAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskMoveSlotOperationRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDiskMoveSlotOperationAccess().getDeviceDiskCrossReference_1_0());
				}
			)
		)
		otherlv_2=Move
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskMoveSlotOperationAccess().getMoveKeyword_2());
		}
		otherlv_3=Slot
		{
			newLeafNode(otherlv_3, grammarAccess.getDiskMoveSlotOperationAccess().getSlotKeyword_3());
		}
		otherlv_4=At
		{
			newLeafNode(otherlv_4, grammarAccess.getDiskMoveSlotOperationAccess().getAtKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskMoveSlotOperationRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getDiskMoveSlotOperationAccess().getSourceDiskZoneParameterCrossReference_5_0());
				}
			)
		)
		otherlv_6=To
		{
			newLeafNode(otherlv_6, grammarAccess.getDiskMoveSlotOperationAccess().getToKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskMoveSlotOperationRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getDiskMoveSlotOperationAccess().getTargetDiskZoneParameterCrossReference_7_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDiskMoveVariableSlotOperation
entryRuleDiskMoveVariableSlotOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskMoveVariableSlotOperationRule()); }
	iv_ruleDiskMoveVariableSlotOperation=ruleDiskMoveVariableSlotOperation
	{ $current=$iv_ruleDiskMoveVariableSlotOperation.current; }
	EOF;

// Rule DiskMoveVariableSlotOperation
ruleDiskMoveVariableSlotOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskMoveVariableSlotOperationAccess().getDiskMoveVariableSlotOperationAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskMoveVariableSlotOperationRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDiskMoveVariableSlotOperationAccess().getDeviceDiskCrossReference_1_0());
				}
			)
		)
		otherlv_2=Move
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskMoveVariableSlotOperationAccess().getMoveKeyword_2());
		}
		otherlv_3=Slot
		{
			newLeafNode(otherlv_3, grammarAccess.getDiskMoveVariableSlotOperationAccess().getSlotKeyword_3());
		}
		otherlv_4=Of
		{
			newLeafNode(otherlv_4, grammarAccess.getDiskMoveVariableSlotOperationAccess().getOfKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskMoveVariableSlotOperationRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getDiskMoveVariableSlotOperationAccess().getVariableVariableCrossReference_5_0());
				}
			)
		)
		otherlv_6=To
		{
			newLeafNode(otherlv_6, grammarAccess.getDiskMoveVariableSlotOperationAccess().getToKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskMoveVariableSlotOperationRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getDiskMoveVariableSlotOperationAccess().getTargetDiskZoneParameterCrossReference_7_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDiskMoveEmptySlotOperation
entryRuleDiskMoveEmptySlotOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskMoveEmptySlotOperationRule()); }
	iv_ruleDiskMoveEmptySlotOperation=ruleDiskMoveEmptySlotOperation
	{ $current=$iv_ruleDiskMoveEmptySlotOperation.current; }
	EOF;

// Rule DiskMoveEmptySlotOperation
ruleDiskMoveEmptySlotOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskMoveEmptySlotOperationAccess().getDiskMoveEmptySlotOperationAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskMoveEmptySlotOperationRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDiskMoveEmptySlotOperationAccess().getDeviceDiskCrossReference_1_0());
				}
			)
		)
		otherlv_2=Move
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskMoveEmptySlotOperationAccess().getMoveKeyword_2());
		}
		otherlv_3=Empty
		{
			newLeafNode(otherlv_3, grammarAccess.getDiskMoveEmptySlotOperationAccess().getEmptyKeyword_3());
		}
		otherlv_4=Slot
		{
			newLeafNode(otherlv_4, grammarAccess.getDiskMoveEmptySlotOperationAccess().getSlotKeyword_4());
		}
		otherlv_5=To
		{
			newLeafNode(otherlv_5, grammarAccess.getDiskMoveEmptySlotOperationAccess().getToKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskMoveEmptySlotOperationRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getDiskMoveEmptySlotOperationAccess().getTargetDiskZoneParameterCrossReference_6_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDiskMarkSlotOperation
entryRuleDiskMarkSlotOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskMarkSlotOperationRule()); }
	iv_ruleDiskMarkSlotOperation=ruleDiskMarkSlotOperation
	{ $current=$iv_ruleDiskMarkSlotOperation.current; }
	EOF;

// Rule DiskMarkSlotOperation
ruleDiskMarkSlotOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskMarkSlotOperationAccess().getDiskMarkSlotOperationAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskMarkSlotOperationRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDiskMarkSlotOperationAccess().getDeviceDiskCrossReference_1_0());
				}
			)
		)
		otherlv_2=Mark
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskMarkSlotOperationAccess().getMarkKeyword_2());
		}
		otherlv_3=Slot
		{
			newLeafNode(otherlv_3, grammarAccess.getDiskMarkSlotOperationAccess().getSlotKeyword_3());
		}
		otherlv_4=At
		{
			newLeafNode(otherlv_4, grammarAccess.getDiskMarkSlotOperationAccess().getAtKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskMarkSlotOperationRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getDiskMarkSlotOperationAccess().getTargetDiskZoneParameterCrossReference_5_0());
				}
			)
		)
		otherlv_6=As
		{
			newLeafNode(otherlv_6, grammarAccess.getDiskMarkSlotOperationAccess().getAsKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDiskMarkSlotOperationAccess().getDiskSlotValueDiskSlotValueParserRuleCall_7_0());
				}
				lv_diskSlotValue_7_0=ruleDiskSlotValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiskMarkSlotOperationRule());
					}
					set(
						$current,
						"diskSlotValue",
						lv_diskSlotValue_7_0,
						"xtext.factoryLang.FactoryLang.DiskSlotValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=In
			{
				newLeafNode(otherlv_8, grammarAccess.getDiskMarkSlotOperationAccess().getInKeyword_8_0());
			}
			(
				(
					lv_quantity_9_0=RULE_INT
					{
						newLeafNode(lv_quantity_9_0, grammarAccess.getDiskMarkSlotOperationAccess().getQuantityINTTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDiskMarkSlotOperationRule());
						}
						setWithLastConsumed(
							$current,
							"quantity",
							lv_quantity_9_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDiskMarkSlotOperationAccess().getMeasureTIMEEnumRuleCall_8_2_0());
					}
					lv_measure_10_0=ruleTIME
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDiskMarkSlotOperationRule());
						}
						set(
							$current,
							"measure",
							lv_measure_10_0,
							"xtext.factoryLang.FactoryLang.TIME");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDiskWaitOperation
entryRuleDiskWaitOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskWaitOperationRule()); }
	iv_ruleDiskWaitOperation=ruleDiskWaitOperation
	{ $current=$iv_ruleDiskWaitOperation.current; }
	EOF;

// Rule DiskWaitOperation
ruleDiskWaitOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskWaitOperationAccess().getDiskWaitOperationAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskWaitOperationRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDiskWaitOperationAccess().getDeviceDiskCrossReference_1_0());
				}
			)
		)
		otherlv_2=Wait
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskWaitOperationAccess().getWaitKeyword_2());
		}
		otherlv_3=For
		{
			newLeafNode(otherlv_3, grammarAccess.getDiskWaitOperationAccess().getForKeyword_3());
		}
		otherlv_4=New
		{
			newLeafNode(otherlv_4, grammarAccess.getDiskWaitOperationAccess().getNewKeyword_4());
		}
		otherlv_5=Item
		{
			newLeafNode(otherlv_5, grammarAccess.getDiskWaitOperationAccess().getItemKeyword_5());
		}
	)
;

// Entry rule entryRuleCameraOperation
entryRuleCameraOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraOperationRule()); }
	iv_ruleCameraOperation=ruleCameraOperation
	{ $current=$iv_ruleCameraOperation.current; }
	EOF;

// Rule CameraOperation
ruleCameraOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getCameraOperationAccess().getCameraScanOperationParserRuleCall());
	}
	this_CameraScanOperation_0=ruleCameraScanOperation
	{
		$current = $this_CameraScanOperation_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleCameraScanOperation
entryRuleCameraScanOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraScanOperationRule()); }
	iv_ruleCameraScanOperation=ruleCameraScanOperation
	{ $current=$iv_ruleCameraScanOperation.current; }
	EOF;

// Rule CameraScanOperation
ruleCameraScanOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCameraScanOperationAccess().getCameraScanOperationAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCameraScanOperationRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCameraScanOperationAccess().getDeviceCameraCrossReference_1_0());
				}
			)
		)
		otherlv_2=Scan
		{
			newLeafNode(otherlv_2, grammarAccess.getCameraScanOperationAccess().getScanKeyword_2());
		}
		otherlv_3=Color
		{
			newLeafNode(otherlv_3, grammarAccess.getCameraScanOperationAccess().getColorKeyword_3());
		}
		otherlv_4=Into
		{
			newLeafNode(otherlv_4, grammarAccess.getCameraScanOperationAccess().getIntoKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraScanOperationAccess().getVariableGlobalVariableParserRuleCall_5_0());
				}
				lv_variable_5_0=ruleGlobalVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraScanOperationRule());
					}
					set(
						$current,
						"variable",
						lv_variable_5_0,
						"xtext.factoryLang.FactoryLang.GlobalVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getLoopAccess().getForEachParserRuleCall());
	}
	this_ForEach_0=ruleForEach
	{
		$current = $this_ForEach_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleForEach
entryRuleForEach returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForEachRule()); }
	iv_ruleForEach=ruleForEach
	{ $current=$iv_ruleForEach.current; }
	EOF;

// Rule ForEach
ruleForEach returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getForEachAccess().getForEachAction_0(),
					$current);
			}
		)
		otherlv_1=For
		{
			newLeafNode(otherlv_1, grammarAccess.getForEachAccess().getForKeyword_1());
		}
		otherlv_2=Each
		{
			newLeafNode(otherlv_2, grammarAccess.getForEachAccess().getEachKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachAccess().getVariableLocalVariableParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleLocalVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachRule());
					}
					set(
						$current,
						"variable",
						lv_variable_3_0,
						"xtext.factoryLang.FactoryLang.LocalVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=In
		{
			newLeafNode(otherlv_4, grammarAccess.getForEachAccess().getInKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForEachRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getForEachAccess().getDeviceDeviceCrossReference_5_0());
				}
			)
		)
		otherlv_6=That
		{
			newLeafNode(otherlv_6, grammarAccess.getForEachAccess().getThatKeyword_6());
		}
		otherlv_7=Is
		{
			newLeafNode(otherlv_7, grammarAccess.getForEachAccess().getIsKeyword_7());
		}
		(
			(
				lv_operator_8_0=Not
				{
					newLeafNode(lv_operator_8_0, grammarAccess.getForEachAccess().getOperatorNotKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForEachRule());
					}
					setWithLastConsumed($current, "operator", lv_operator_8_0, "not");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachAccess().getVariableValueVariableValueParserRuleCall_9_0());
				}
				lv_variableValue_9_0=ruleVariableValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachRule());
					}
					set(
						$current,
						"variableValue",
						lv_variableValue_9_0,
						"xtext.factoryLang.FactoryLang.VariableValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10=Then
		{
			newLeafNode(otherlv_10, grammarAccess.getForEachAccess().getThenKeyword_10());
		}
		this_BEGIN_11=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_11, grammarAccess.getForEachAccess().getBEGINTerminalRuleCall_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachAccess().getStatementsStatementParserRuleCall_12_0());
				}
				lv_statements_12_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachRule());
					}
					add(
						$current,
						"statements",
						lv_statements_12_0,
						"xtext.factoryLang.FactoryLang.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_13=RULE_END
		{
			newLeafNode(this_END_13, grammarAccess.getForEachAccess().getENDTerminalRuleCall_13());
		}
	)
;

// Entry rule entryRuleLocalVariable
entryRuleLocalVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalVariableRule()); }
	iv_ruleLocalVariable=ruleLocalVariable
	{ $current=$iv_ruleLocalVariable.current; }
	EOF;

// Rule LocalVariable
ruleLocalVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLocalVariableAccess().getLocalVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocalVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGlobalVariable
entryRuleGlobalVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobalVariableRule()); }
	iv_ruleGlobalVariable=ruleGlobalVariable
	{ $current=$iv_ruleGlobalVariable.current; }
	EOF;

// Rule GlobalVariable
ruleGlobalVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGlobalVariableAccess().getGlobalVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGlobalVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGlobalVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDeviceValue
entryRuleDeviceValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceValueRule()); }
	iv_ruleDeviceValue=ruleDeviceValue
	{ $current=$iv_ruleDeviceValue.current; }
	EOF;

// Rule DeviceValue
ruleDeviceValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceValueAccess().getValueDiskStateValueParserRuleCall_0_0());
				}
				lv_value_0_0=ruleDiskStateValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceValueRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"xtext.factoryLang.FactoryLang.DiskStateValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceValueAccess().getValueColorValueParserRuleCall_1_0());
				}
				lv_value_1_0=ruleColorValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceValueRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"xtext.factoryLang.FactoryLang.ColorValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceValueRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getDeviceValueAccess().getRefParameterCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDiskSlotValue
entryRuleDiskSlotValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskSlotValueRule()); }
	iv_ruleDiskSlotValue=ruleDiskSlotValue
	{ $current=$iv_ruleDiskSlotValue.current; }
	EOF;

// Rule DiskSlotValue
ruleDiskSlotValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDiskSlotValueAccess().getValueDiskSlotStateValueParserRuleCall_0_0());
				}
				lv_value_0_0=ruleDiskSlotStateValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiskSlotValueRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"xtext.factoryLang.FactoryLang.DiskSlotStateValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDiskSlotValueAccess().getValueColorValueParserRuleCall_1_0());
				}
				lv_value_1_0=ruleColorValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiskSlotValueRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"xtext.factoryLang.FactoryLang.ColorValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskSlotValueRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getDiskSlotValueAccess().getRefVariableCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleVariableValue
entryRuleVariableValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableValueRule()); }
	iv_ruleVariableValue=ruleVariableValue
	{ $current=$iv_ruleVariableValue.current; }
	EOF;

// Rule VariableValue
ruleVariableValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValueAccess().getValueDiskSlotStateValueParserRuleCall_0_0());
				}
				lv_value_0_0=ruleDiskSlotStateValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValueRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"xtext.factoryLang.FactoryLang.DiskSlotStateValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValueAccess().getValueColorValueParserRuleCall_1_0());
				}
				lv_value_1_0=ruleColorValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValueRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"xtext.factoryLang.FactoryLang.ColorValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValueAccess().getValueNumberParserRuleCall_2_0());
				}
				lv_value_2_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValueRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"xtext.factoryLang.FactoryLang.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValueAccess().getValueDiskStateValueParserRuleCall_3_0());
				}
				lv_value_3_0=ruleDiskStateValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValueRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"xtext.factoryLang.FactoryLang.DiskStateValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableValueRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getVariableValueAccess().getRefVariableCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDiskStateValue
entryRuleDiskStateValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskStateValueRule()); }
	iv_ruleDiskStateValue=ruleDiskStateValue
	{ $current=$iv_ruleDiskStateValue.current; }
	EOF;

// Rule DiskStateValue
ruleDiskStateValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDiskStateValueAccess().getValueDISK_STATESEnumRuleCall_0());
			}
			lv_value_0_0=ruleDISK_STATES
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDiskStateValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"xtext.factoryLang.FactoryLang.DISK_STATES");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDiskSlotStateValue
entryRuleDiskSlotStateValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskSlotStateValueRule()); }
	iv_ruleDiskSlotStateValue=ruleDiskSlotStateValue
	{ $current=$iv_ruleDiskSlotStateValue.current; }
	EOF;

// Rule DiskSlotStateValue
ruleDiskSlotStateValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDiskSlotStateValueAccess().getValueDISK_SLOT_STATESEnumRuleCall_0());
			}
			lv_value_0_0=ruleDISK_SLOT_STATES
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDiskSlotStateValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"xtext.factoryLang.FactoryLang.DISK_SLOT_STATES");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleColorValue
entryRuleColorValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorValueRule()); }
	iv_ruleColorValue=ruleColorValue
	{ $current=$iv_ruleColorValue.current; }
	EOF;

// Rule ColorValue
ruleColorValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getColorValueAccess().getValueCOLOREnumRuleCall_0());
			}
			lv_value_0_0=ruleCOLOR
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getColorValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"xtext.factoryLang.FactoryLang.COLOR");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current; }
	EOF;

// Rule Number
ruleNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumberRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Rule COMPARISON_OPERATOR
ruleCOMPARISON_OPERATOR returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Undefined
			{
				$current = grammarAccess.getCOMPARISON_OPERATORAccess().getUNDEFINEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCOMPARISON_OPERATORAccess().getUNDEFINEDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=LessThan
			{
				$current = grammarAccess.getCOMPARISON_OPERATORAccess().getLESS_THANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCOMPARISON_OPERATORAccess().getLESS_THANEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=GreaterThan
			{
				$current = grammarAccess.getCOMPARISON_OPERATORAccess().getGREATER_THANEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCOMPARISON_OPERATORAccess().getGREATER_THANEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=Not
			{
				$current = grammarAccess.getCOMPARISON_OPERATORAccess().getNOTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCOMPARISON_OPERATORAccess().getNOTEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule COLOR
ruleCOLOR returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Red
			{
				$current = grammarAccess.getCOLORAccess().getREDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCOLORAccess().getREDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Green
			{
				$current = grammarAccess.getCOLORAccess().getGREENEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCOLORAccess().getGREENEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Blue
			{
				$current = grammarAccess.getCOLORAccess().getBLUEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCOLORAccess().getBLUEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DISK_SLOT_STATES
ruleDISK_SLOT_STATES returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Free
			{
				$current = grammarAccess.getDISK_SLOT_STATESAccess().getFREEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDISK_SLOT_STATESAccess().getFREEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=In_progress
			{
				$current = grammarAccess.getDISK_SLOT_STATESAccess().getIN_PROGRESSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDISK_SLOT_STATESAccess().getIN_PROGRESSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Complete
			{
				$current = grammarAccess.getDISK_SLOT_STATESAccess().getCOMPLETEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDISK_SLOT_STATESAccess().getCOMPLETEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DISK_STATES
ruleDISK_STATES returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Full
			{
				$current = grammarAccess.getDISK_STATESAccess().getFULLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDISK_STATESAccess().getFULLEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Empty
			{
				$current = grammarAccess.getDISK_STATESAccess().getEMPTYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDISK_STATESAccess().getEMPTYEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TIME
ruleTIME returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Seconds
			{
				$current = grammarAccess.getTIMEAccess().getSECONDSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTIMEAccess().getSECONDSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Second
			{
				$current = grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Minutes
			{
				$current = grammarAccess.getTIMEAccess().getMINUTESEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTIMEAccess().getMINUTESEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=Minute
			{
				$current = grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4=Hours
			{
				$current = grammarAccess.getTIMEAccess().getHOURSEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTIMEAccess().getHOURSEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5=Hour
			{
				$current = grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_5());
			}
		)
	)
;
