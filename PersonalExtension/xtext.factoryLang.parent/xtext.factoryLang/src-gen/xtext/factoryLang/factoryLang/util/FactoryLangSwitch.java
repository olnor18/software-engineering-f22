/**
 * generated by Xtext 2.26.0
 */
package xtext.factoryLang.factoryLang.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import xtext.factoryLang.factoryLang.Camera;
import xtext.factoryLang.factoryLang.CameraColorParameter;
import xtext.factoryLang.factoryLang.CameraOperation;
import xtext.factoryLang.factoryLang.CameraParameter;
import xtext.factoryLang.factoryLang.CameraScanOperation;
import xtext.factoryLang.factoryLang.ColorValue;
import xtext.factoryLang.factoryLang.Conditional;
import xtext.factoryLang.factoryLang.Configuration;
import xtext.factoryLang.factoryLang.Crane;
import xtext.factoryLang.factoryLang.CraneDropOperation;
import xtext.factoryLang.factoryLang.CraneOperation;
import xtext.factoryLang.factoryLang.CraneParameter;
import xtext.factoryLang.factoryLang.CranePickupOperation;
import xtext.factoryLang.factoryLang.CranePositionParameter;
import xtext.factoryLang.factoryLang.Device;
import xtext.factoryLang.factoryLang.DeviceConditional;
import xtext.factoryLang.factoryLang.DeviceValue;
import xtext.factoryLang.factoryLang.Disk;
import xtext.factoryLang.factoryLang.DiskMarkSlotOperation;
import xtext.factoryLang.factoryLang.DiskMoveEmptySlotOperation;
import xtext.factoryLang.factoryLang.DiskMoveSlotOperation;
import xtext.factoryLang.factoryLang.DiskMoveVariableSlotOperation;
import xtext.factoryLang.factoryLang.DiskOperation;
import xtext.factoryLang.factoryLang.DiskParameter;
import xtext.factoryLang.factoryLang.DiskSlotParameter;
import xtext.factoryLang.factoryLang.DiskSlotStateValue;
import xtext.factoryLang.factoryLang.DiskSlotValue;
import xtext.factoryLang.factoryLang.DiskStateValue;
import xtext.factoryLang.factoryLang.DiskWaitOperation;
import xtext.factoryLang.factoryLang.DiskZoneParameter;
import xtext.factoryLang.factoryLang.FactoryLangPackage;
import xtext.factoryLang.factoryLang.ForEach;
import xtext.factoryLang.factoryLang.GlobalVariable;
import xtext.factoryLang.factoryLang.LocalVariable;
import xtext.factoryLang.factoryLang.Loop;
import xtext.factoryLang.factoryLang.Model;
import xtext.factoryLang.factoryLang.Operation;
import xtext.factoryLang.factoryLang.Parameter;
import xtext.factoryLang.factoryLang.Statement;
import xtext.factoryLang.factoryLang.Variable;
import xtext.factoryLang.factoryLang.VariableConditional;
import xtext.factoryLang.factoryLang.VariableValue;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see xtext.factoryLang.factoryLang.FactoryLangPackage
 * @generated
 */
public class FactoryLangSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static FactoryLangPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FactoryLangSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = FactoryLangPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case FactoryLangPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CONFIGURATION:
      {
        Configuration configuration = (Configuration)theEObject;
        T result = caseConfiguration(configuration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DEVICE:
      {
        Device device = (Device)theEObject;
        T result = caseDevice(device);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.PARAMETER:
      {
        Parameter parameter = (Parameter)theEObject;
        T result = caseParameter(parameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CRANE_PARAMETER:
      {
        CraneParameter craneParameter = (CraneParameter)theEObject;
        T result = caseCraneParameter(craneParameter);
        if (result == null) result = caseParameter(craneParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_PARAMETER:
      {
        DiskParameter diskParameter = (DiskParameter)theEObject;
        T result = caseDiskParameter(diskParameter);
        if (result == null) result = caseParameter(diskParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CAMERA_PARAMETER:
      {
        CameraParameter cameraParameter = (CameraParameter)theEObject;
        T result = caseCameraParameter(cameraParameter);
        if (result == null) result = caseParameter(cameraParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.STATEMENT:
      {
        Statement statement = (Statement)theEObject;
        T result = caseStatement(statement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CONDITIONAL:
      {
        Conditional conditional = (Conditional)theEObject;
        T result = caseConditional(conditional);
        if (result == null) result = caseStatement(conditional);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.OPERATION:
      {
        Operation operation = (Operation)theEObject;
        T result = caseOperation(operation);
        if (result == null) result = caseStatement(operation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CRANE_OPERATION:
      {
        CraneOperation craneOperation = (CraneOperation)theEObject;
        T result = caseCraneOperation(craneOperation);
        if (result == null) result = caseOperation(craneOperation);
        if (result == null) result = caseStatement(craneOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_OPERATION:
      {
        DiskOperation diskOperation = (DiskOperation)theEObject;
        T result = caseDiskOperation(diskOperation);
        if (result == null) result = caseOperation(diskOperation);
        if (result == null) result = caseStatement(diskOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CAMERA_OPERATION:
      {
        CameraOperation cameraOperation = (CameraOperation)theEObject;
        T result = caseCameraOperation(cameraOperation);
        if (result == null) result = caseOperation(cameraOperation);
        if (result == null) result = caseStatement(cameraOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.LOOP:
      {
        Loop loop = (Loop)theEObject;
        T result = caseLoop(loop);
        if (result == null) result = caseStatement(loop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.VARIABLE:
      {
        Variable variable = (Variable)theEObject;
        T result = caseVariable(variable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DEVICE_VALUE:
      {
        DeviceValue deviceValue = (DeviceValue)theEObject;
        T result = caseDeviceValue(deviceValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_SLOT_VALUE:
      {
        DiskSlotValue diskSlotValue = (DiskSlotValue)theEObject;
        T result = caseDiskSlotValue(diskSlotValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.VARIABLE_VALUE:
      {
        VariableValue variableValue = (VariableValue)theEObject;
        T result = caseVariableValue(variableValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_STATE_VALUE:
      {
        DiskStateValue diskStateValue = (DiskStateValue)theEObject;
        T result = caseDiskStateValue(diskStateValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_SLOT_STATE_VALUE:
      {
        DiskSlotStateValue diskSlotStateValue = (DiskSlotStateValue)theEObject;
        T result = caseDiskSlotStateValue(diskSlotStateValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.COLOR_VALUE:
      {
        ColorValue colorValue = (ColorValue)theEObject;
        T result = caseColorValue(colorValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.NUMBER:
      {
        xtext.factoryLang.factoryLang.Number number = (xtext.factoryLang.factoryLang.Number)theEObject;
        T result = caseNumber(number);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CRANE:
      {
        Crane crane = (Crane)theEObject;
        T result = caseCrane(crane);
        if (result == null) result = caseDevice(crane);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CRANE_POSITION_PARAMETER:
      {
        CranePositionParameter cranePositionParameter = (CranePositionParameter)theEObject;
        T result = caseCranePositionParameter(cranePositionParameter);
        if (result == null) result = caseCraneParameter(cranePositionParameter);
        if (result == null) result = caseParameter(cranePositionParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK:
      {
        Disk disk = (Disk)theEObject;
        T result = caseDisk(disk);
        if (result == null) result = caseDevice(disk);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_SLOT_PARAMETER:
      {
        DiskSlotParameter diskSlotParameter = (DiskSlotParameter)theEObject;
        T result = caseDiskSlotParameter(diskSlotParameter);
        if (result == null) result = caseDiskParameter(diskSlotParameter);
        if (result == null) result = caseParameter(diskSlotParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_ZONE_PARAMETER:
      {
        DiskZoneParameter diskZoneParameter = (DiskZoneParameter)theEObject;
        T result = caseDiskZoneParameter(diskZoneParameter);
        if (result == null) result = caseDiskParameter(diskZoneParameter);
        if (result == null) result = caseParameter(diskZoneParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CAMERA:
      {
        Camera camera = (Camera)theEObject;
        T result = caseCamera(camera);
        if (result == null) result = caseDevice(camera);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CAMERA_COLOR_PARAMETER:
      {
        CameraColorParameter cameraColorParameter = (CameraColorParameter)theEObject;
        T result = caseCameraColorParameter(cameraColorParameter);
        if (result == null) result = caseCameraParameter(cameraColorParameter);
        if (result == null) result = caseParameter(cameraColorParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DEVICE_CONDITIONAL:
      {
        DeviceConditional deviceConditional = (DeviceConditional)theEObject;
        T result = caseDeviceConditional(deviceConditional);
        if (result == null) result = caseConditional(deviceConditional);
        if (result == null) result = caseStatement(deviceConditional);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.VARIABLE_CONDITIONAL:
      {
        VariableConditional variableConditional = (VariableConditional)theEObject;
        T result = caseVariableConditional(variableConditional);
        if (result == null) result = caseConditional(variableConditional);
        if (result == null) result = caseStatement(variableConditional);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CRANE_PICKUP_OPERATION:
      {
        CranePickupOperation cranePickupOperation = (CranePickupOperation)theEObject;
        T result = caseCranePickupOperation(cranePickupOperation);
        if (result == null) result = caseCraneOperation(cranePickupOperation);
        if (result == null) result = caseOperation(cranePickupOperation);
        if (result == null) result = caseStatement(cranePickupOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CRANE_DROP_OPERATION:
      {
        CraneDropOperation craneDropOperation = (CraneDropOperation)theEObject;
        T result = caseCraneDropOperation(craneDropOperation);
        if (result == null) result = caseCraneOperation(craneDropOperation);
        if (result == null) result = caseOperation(craneDropOperation);
        if (result == null) result = caseStatement(craneDropOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_MOVE_SLOT_OPERATION:
      {
        DiskMoveSlotOperation diskMoveSlotOperation = (DiskMoveSlotOperation)theEObject;
        T result = caseDiskMoveSlotOperation(diskMoveSlotOperation);
        if (result == null) result = caseDiskOperation(diskMoveSlotOperation);
        if (result == null) result = caseOperation(diskMoveSlotOperation);
        if (result == null) result = caseStatement(diskMoveSlotOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_MOVE_VARIABLE_SLOT_OPERATION:
      {
        DiskMoveVariableSlotOperation diskMoveVariableSlotOperation = (DiskMoveVariableSlotOperation)theEObject;
        T result = caseDiskMoveVariableSlotOperation(diskMoveVariableSlotOperation);
        if (result == null) result = caseDiskOperation(diskMoveVariableSlotOperation);
        if (result == null) result = caseOperation(diskMoveVariableSlotOperation);
        if (result == null) result = caseStatement(diskMoveVariableSlotOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_MOVE_EMPTY_SLOT_OPERATION:
      {
        DiskMoveEmptySlotOperation diskMoveEmptySlotOperation = (DiskMoveEmptySlotOperation)theEObject;
        T result = caseDiskMoveEmptySlotOperation(diskMoveEmptySlotOperation);
        if (result == null) result = caseDiskOperation(diskMoveEmptySlotOperation);
        if (result == null) result = caseOperation(diskMoveEmptySlotOperation);
        if (result == null) result = caseStatement(diskMoveEmptySlotOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_MARK_SLOT_OPERATION:
      {
        DiskMarkSlotOperation diskMarkSlotOperation = (DiskMarkSlotOperation)theEObject;
        T result = caseDiskMarkSlotOperation(diskMarkSlotOperation);
        if (result == null) result = caseDiskOperation(diskMarkSlotOperation);
        if (result == null) result = caseOperation(diskMarkSlotOperation);
        if (result == null) result = caseStatement(diskMarkSlotOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.DISK_WAIT_OPERATION:
      {
        DiskWaitOperation diskWaitOperation = (DiskWaitOperation)theEObject;
        T result = caseDiskWaitOperation(diskWaitOperation);
        if (result == null) result = caseDiskOperation(diskWaitOperation);
        if (result == null) result = caseOperation(diskWaitOperation);
        if (result == null) result = caseStatement(diskWaitOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.CAMERA_SCAN_OPERATION:
      {
        CameraScanOperation cameraScanOperation = (CameraScanOperation)theEObject;
        T result = caseCameraScanOperation(cameraScanOperation);
        if (result == null) result = caseCameraOperation(cameraScanOperation);
        if (result == null) result = caseOperation(cameraScanOperation);
        if (result == null) result = caseStatement(cameraScanOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.FOR_EACH:
      {
        ForEach forEach = (ForEach)theEObject;
        T result = caseForEach(forEach);
        if (result == null) result = caseLoop(forEach);
        if (result == null) result = caseStatement(forEach);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.LOCAL_VARIABLE:
      {
        LocalVariable localVariable = (LocalVariable)theEObject;
        T result = caseLocalVariable(localVariable);
        if (result == null) result = caseVariable(localVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FactoryLangPackage.GLOBAL_VARIABLE:
      {
        GlobalVariable globalVariable = (GlobalVariable)theEObject;
        T result = caseGlobalVariable(globalVariable);
        if (result == null) result = caseVariable(globalVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Configuration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Configuration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfiguration(Configuration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Device</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Device</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDevice(Device object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParameter(Parameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCraneParameter(CraneParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskParameter(DiskParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Camera Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Camera Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCameraParameter(CameraParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStatement(Statement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Conditional</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Conditional</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConditional(Conditional object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOperation(Operation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCraneOperation(CraneOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskOperation(DiskOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Camera Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Camera Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCameraOperation(CameraOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Loop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Loop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLoop(Loop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariable(Variable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Device Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Device Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeviceValue(DeviceValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Slot Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Slot Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskSlotValue(DiskSlotValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariableValue(VariableValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk State Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk State Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskStateValue(DiskStateValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Slot State Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Slot State Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskSlotStateValue(DiskSlotStateValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Color Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Color Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseColorValue(ColorValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNumber(xtext.factoryLang.factoryLang.Number object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCrane(Crane object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane Position Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane Position Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCranePositionParameter(CranePositionParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDisk(Disk object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Slot Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Slot Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskSlotParameter(DiskSlotParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Zone Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Zone Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskZoneParameter(DiskZoneParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Camera</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Camera</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCamera(Camera object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Camera Color Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Camera Color Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCameraColorParameter(CameraColorParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Device Conditional</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Device Conditional</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeviceConditional(DeviceConditional object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable Conditional</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable Conditional</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariableConditional(VariableConditional object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane Pickup Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane Pickup Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCranePickupOperation(CranePickupOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane Drop Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane Drop Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCraneDropOperation(CraneDropOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Move Slot Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Move Slot Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskMoveSlotOperation(DiskMoveSlotOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Move Variable Slot Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Move Variable Slot Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskMoveVariableSlotOperation(DiskMoveVariableSlotOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Move Empty Slot Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Move Empty Slot Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskMoveEmptySlotOperation(DiskMoveEmptySlotOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Mark Slot Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Mark Slot Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskMarkSlotOperation(DiskMarkSlotOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Wait Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Wait Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskWaitOperation(DiskWaitOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Camera Scan Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Camera Scan Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCameraScanOperation(CameraScanOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>For Each</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>For Each</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseForEach(ForEach object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Local Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Local Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocalVariable(LocalVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalVariable(GlobalVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //FactoryLangSwitch
