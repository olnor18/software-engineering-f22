/**
 * generated by Xtext 2.26.0
 */
package xtext.factoryLang.factoryLang;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Variable Conditional</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link xtext.factoryLang.factoryLang.VariableConditional#getVariable <em>Variable</em>}</li>
 *   <li>{@link xtext.factoryLang.factoryLang.VariableConditional#getComparison_operator <em>Comparison operator</em>}</li>
 *   <li>{@link xtext.factoryLang.factoryLang.VariableConditional#getVariableValue <em>Variable Value</em>}</li>
 * </ul>
 *
 * @see xtext.factoryLang.factoryLang.FactoryLangPackage#getVariableConditional()
 * @model
 * @generated
 */
public interface VariableConditional extends Conditional
{
  /**
   * Returns the value of the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable</em>' reference.
   * @see #setVariable(Variable)
   * @see xtext.factoryLang.factoryLang.FactoryLangPackage#getVariableConditional_Variable()
   * @model
   * @generated
   */
  Variable getVariable();

  /**
   * Sets the value of the '{@link xtext.factoryLang.factoryLang.VariableConditional#getVariable <em>Variable</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variable</em>' reference.
   * @see #getVariable()
   * @generated
   */
  void setVariable(Variable value);

  /**
   * Returns the value of the '<em><b>Comparison operator</b></em>' attribute.
   * The literals are from the enumeration {@link xtext.factoryLang.factoryLang.COMPARISON_OPERATOR}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Comparison operator</em>' attribute.
   * @see xtext.factoryLang.factoryLang.COMPARISON_OPERATOR
   * @see #setComparison_operator(COMPARISON_OPERATOR)
   * @see xtext.factoryLang.factoryLang.FactoryLangPackage#getVariableConditional_Comparison_operator()
   * @model
   * @generated
   */
  COMPARISON_OPERATOR getComparison_operator();

  /**
   * Sets the value of the '{@link xtext.factoryLang.factoryLang.VariableConditional#getComparison_operator <em>Comparison operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Comparison operator</em>' attribute.
   * @see xtext.factoryLang.factoryLang.COMPARISON_OPERATOR
   * @see #getComparison_operator()
   * @generated
   */
  void setComparison_operator(COMPARISON_OPERATOR value);

  /**
   * Returns the value of the '<em><b>Variable Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable Value</em>' containment reference.
   * @see #setVariableValue(VariableValue)
   * @see xtext.factoryLang.factoryLang.FactoryLangPackage#getVariableConditional_VariableValue()
   * @model containment="true"
   * @generated
   */
  VariableValue getVariableValue();

  /**
   * Sets the value of the '{@link xtext.factoryLang.factoryLang.VariableConditional#getVariableValue <em>Variable Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variable Value</em>' containment reference.
   * @see #getVariableValue()
   * @generated
   */
  void setVariableValue(VariableValue value);

} // VariableConditional
