/*
 * generated by Xtext 2.26.0
 */
parser grammar InternalFactoryLangParser;

options {
	tokenVocab=InternalFactoryLangLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package xtext.factoryLang.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import xtext.factoryLang.services.FactoryLangGrammarAccess;

}
@members {
	private FactoryLangGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("As", "'as'");
		tokenNameToValue.put("At", "'at'");
		tokenNameToValue.put("If", "'if'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("Is", "'is'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("To", "'to'");
		tokenNameToValue.put("For", "'for'");
		tokenNameToValue.put("New", "'new'");
		tokenNameToValue.put("Not", "'not'");
		tokenNameToValue.put("Red", "'red'");
		tokenNameToValue.put("Blue", "'blue'");
		tokenNameToValue.put("Disk", "'disk'");
		tokenNameToValue.put("Drop", "'drop'");
		tokenNameToValue.put("Each", "'each'");
		tokenNameToValue.put("Free", "'free'");
		tokenNameToValue.put("Full", "'full'");
		tokenNameToValue.put("Hour", "'hour'");
		tokenNameToValue.put("Into", "'into'");
		tokenNameToValue.put("Item", "'item'");
		tokenNameToValue.put("Mark", "'mark'");
		tokenNameToValue.put("Move", "'move'");
		tokenNameToValue.put("Scan", "'scan'");
		tokenNameToValue.put("Slot", "'slot'");
		tokenNameToValue.put("That", "'that'");
		tokenNameToValue.put("Then", "'then'");
		tokenNameToValue.put("Wait", "'wait'");
		tokenNameToValue.put("With", "'with'");
		tokenNameToValue.put("Zone", "'zone'");
		tokenNameToValue.put("Color", "'color'");
		tokenNameToValue.put("Crane", "'crane'");
		tokenNameToValue.put("Empty", "'empty'");
		tokenNameToValue.put("Green", "'green'");
		tokenNameToValue.put("Hours", "'hours'");
		tokenNameToValue.put("Named", "'named'");
		tokenNameToValue.put("Slots", "'slots'");
		tokenNameToValue.put("Camera", "'camera'");
		tokenNameToValue.put("Create", "'create'");
		tokenNameToValue.put("Device", "'device'");
		tokenNameToValue.put("Minute", "'minute'");
		tokenNameToValue.put("Pickup", "'pickup'");
		tokenNameToValue.put("Second", "'second'");
		tokenNameToValue.put("Minutes", "'minutes'");
		tokenNameToValue.put("Seconds", "'seconds'");
		tokenNameToValue.put("Complete", "'complete'");
		tokenNameToValue.put("Position", "'position'");
		tokenNameToValue.put("Variable", "'variable'");
		tokenNameToValue.put("LessThan", "'less than'");
		tokenNameToValue.put("Scannable", "'scannable'");
		tokenNameToValue.put("Undefined", "'undefined'");
		tokenNameToValue.put("In_progress", "'in_progress'");
		tokenNameToValue.put("GreaterThan", "'greater than'");
	}

	public void setGrammarAccess(FactoryLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfiguration
entryRuleConfiguration
:
{ before(grammarAccess.getConfigurationRule()); }
	 ruleConfiguration
{ after(grammarAccess.getConfigurationRule()); } 
	 EOF 
;

// Rule Configuration
ruleConfiguration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigurationAccess().getGroup()); }
		(rule__Configuration__Group__0)
		{ after(grammarAccess.getConfigurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDevice
entryRuleDevice
:
{ before(grammarAccess.getDeviceRule()); }
	 ruleDevice
{ after(grammarAccess.getDeviceRule()); } 
	 EOF 
;

// Rule Device
ruleDevice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceAccess().getAlternatives()); }
		(rule__Device__Alternatives)
		{ after(grammarAccess.getDeviceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCrane
entryRuleCrane
:
{ before(grammarAccess.getCraneRule()); }
	 ruleCrane
{ after(grammarAccess.getCraneRule()); } 
	 EOF 
;

// Rule Crane
ruleCrane 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCraneAccess().getGroup()); }
		(rule__Crane__Group__0)
		{ after(grammarAccess.getCraneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCraneParameter
entryRuleCraneParameter
:
{ before(grammarAccess.getCraneParameterRule()); }
	 ruleCraneParameter
{ after(grammarAccess.getCraneParameterRule()); } 
	 EOF 
;

// Rule CraneParameter
ruleCraneParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCraneParameterAccess().getCranePositionParameterParserRuleCall()); }
		ruleCranePositionParameter
		{ after(grammarAccess.getCraneParameterAccess().getCranePositionParameterParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCranePositionParameter
entryRuleCranePositionParameter
:
{ before(grammarAccess.getCranePositionParameterRule()); }
	 ruleCranePositionParameter
{ after(grammarAccess.getCranePositionParameterRule()); } 
	 EOF 
;

// Rule CranePositionParameter
ruleCranePositionParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCranePositionParameterAccess().getGroup()); }
		(rule__CranePositionParameter__Group__0)
		{ after(grammarAccess.getCranePositionParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDisk
entryRuleDisk
:
{ before(grammarAccess.getDiskRule()); }
	 ruleDisk
{ after(grammarAccess.getDiskRule()); } 
	 EOF 
;

// Rule Disk
ruleDisk 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskAccess().getGroup()); }
		(rule__Disk__Group__0)
		{ after(grammarAccess.getDiskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskParameter
entryRuleDiskParameter
:
{ before(grammarAccess.getDiskParameterRule()); }
	 ruleDiskParameter
{ after(grammarAccess.getDiskParameterRule()); } 
	 EOF 
;

// Rule DiskParameter
ruleDiskParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskParameterAccess().getDiskZoneParameterParserRuleCall()); }
		ruleDiskZoneParameter
		{ after(grammarAccess.getDiskParameterAccess().getDiskZoneParameterParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskSlotParameter
entryRuleDiskSlotParameter
:
{ before(grammarAccess.getDiskSlotParameterRule()); }
	 ruleDiskSlotParameter
{ after(grammarAccess.getDiskSlotParameterRule()); } 
	 EOF 
;

// Rule DiskSlotParameter
ruleDiskSlotParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskSlotParameterAccess().getGroup()); }
		(rule__DiskSlotParameter__Group__0)
		{ after(grammarAccess.getDiskSlotParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskZoneParameter
entryRuleDiskZoneParameter
:
{ before(grammarAccess.getDiskZoneParameterRule()); }
	 ruleDiskZoneParameter
{ after(grammarAccess.getDiskZoneParameterRule()); } 
	 EOF 
;

// Rule DiskZoneParameter
ruleDiskZoneParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskZoneParameterAccess().getGroup()); }
		(rule__DiskZoneParameter__Group__0)
		{ after(grammarAccess.getDiskZoneParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCamera
entryRuleCamera
:
{ before(grammarAccess.getCameraRule()); }
	 ruleCamera
{ after(grammarAccess.getCameraRule()); } 
	 EOF 
;

// Rule Camera
ruleCamera 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCameraAccess().getGroup()); }
		(rule__Camera__Group__0)
		{ after(grammarAccess.getCameraAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCameraParameter
entryRuleCameraParameter
:
{ before(grammarAccess.getCameraParameterRule()); }
	 ruleCameraParameter
{ after(grammarAccess.getCameraParameterRule()); } 
	 EOF 
;

// Rule CameraParameter
ruleCameraParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCameraParameterAccess().getCameraColorParameterParserRuleCall()); }
		ruleCameraColorParameter
		{ after(grammarAccess.getCameraParameterAccess().getCameraColorParameterParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCameraColorParameter
entryRuleCameraColorParameter
:
{ before(grammarAccess.getCameraColorParameterRule()); }
	 ruleCameraColorParameter
{ after(grammarAccess.getCameraColorParameterRule()); } 
	 EOF 
;

// Rule CameraColorParameter
ruleCameraColorParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCameraColorParameterAccess().getGroup()); }
		(rule__CameraColorParameter__Group__0)
		{ after(grammarAccess.getCameraColorParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditional
entryRuleConditional
:
{ before(grammarAccess.getConditionalRule()); }
	 ruleConditional
{ after(grammarAccess.getConditionalRule()); } 
	 EOF 
;

// Rule Conditional
ruleConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAccess().getAlternatives()); }
		(rule__Conditional__Alternatives)
		{ after(grammarAccess.getConditionalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeviceConditional
entryRuleDeviceConditional
:
{ before(grammarAccess.getDeviceConditionalRule()); }
	 ruleDeviceConditional
{ after(grammarAccess.getDeviceConditionalRule()); } 
	 EOF 
;

// Rule DeviceConditional
ruleDeviceConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getGroup()); }
		(rule__DeviceConditional__Group__0)
		{ after(grammarAccess.getDeviceConditionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableConditional
entryRuleVariableConditional
:
{ before(grammarAccess.getVariableConditionalRule()); }
	 ruleVariableConditional
{ after(grammarAccess.getVariableConditionalRule()); } 
	 EOF 
;

// Rule VariableConditional
ruleVariableConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getGroup()); }
		(rule__VariableConditional__Group__0)
		{ after(grammarAccess.getVariableConditionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getAlternatives()); }
		(rule__Operation__Alternatives)
		{ after(grammarAccess.getOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCraneOperation
entryRuleCraneOperation
:
{ before(grammarAccess.getCraneOperationRule()); }
	 ruleCraneOperation
{ after(grammarAccess.getCraneOperationRule()); } 
	 EOF 
;

// Rule CraneOperation
ruleCraneOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCraneOperationAccess().getAlternatives()); }
		(rule__CraneOperation__Alternatives)
		{ after(grammarAccess.getCraneOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCranePickupOperation
entryRuleCranePickupOperation
:
{ before(grammarAccess.getCranePickupOperationRule()); }
	 ruleCranePickupOperation
{ after(grammarAccess.getCranePickupOperationRule()); } 
	 EOF 
;

// Rule CranePickupOperation
ruleCranePickupOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCranePickupOperationAccess().getGroup()); }
		(rule__CranePickupOperation__Group__0)
		{ after(grammarAccess.getCranePickupOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCraneDropOperation
entryRuleCraneDropOperation
:
{ before(grammarAccess.getCraneDropOperationRule()); }
	 ruleCraneDropOperation
{ after(grammarAccess.getCraneDropOperationRule()); } 
	 EOF 
;

// Rule CraneDropOperation
ruleCraneDropOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCraneDropOperationAccess().getGroup()); }
		(rule__CraneDropOperation__Group__0)
		{ after(grammarAccess.getCraneDropOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskOperation
entryRuleDiskOperation
:
{ before(grammarAccess.getDiskOperationRule()); }
	 ruleDiskOperation
{ after(grammarAccess.getDiskOperationRule()); } 
	 EOF 
;

// Rule DiskOperation
ruleDiskOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskOperationAccess().getAlternatives()); }
		(rule__DiskOperation__Alternatives)
		{ after(grammarAccess.getDiskOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskMoveSlotOperation
entryRuleDiskMoveSlotOperation
:
{ before(grammarAccess.getDiskMoveSlotOperationRule()); }
	 ruleDiskMoveSlotOperation
{ after(grammarAccess.getDiskMoveSlotOperationRule()); } 
	 EOF 
;

// Rule DiskMoveSlotOperation
ruleDiskMoveSlotOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskMoveSlotOperationAccess().getGroup()); }
		(rule__DiskMoveSlotOperation__Group__0)
		{ after(grammarAccess.getDiskMoveSlotOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskMoveVariableSlotOperation
entryRuleDiskMoveVariableSlotOperation
:
{ before(grammarAccess.getDiskMoveVariableSlotOperationRule()); }
	 ruleDiskMoveVariableSlotOperation
{ after(grammarAccess.getDiskMoveVariableSlotOperationRule()); } 
	 EOF 
;

// Rule DiskMoveVariableSlotOperation
ruleDiskMoveVariableSlotOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getGroup()); }
		(rule__DiskMoveVariableSlotOperation__Group__0)
		{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskMoveEmptySlotOperation
entryRuleDiskMoveEmptySlotOperation
:
{ before(grammarAccess.getDiskMoveEmptySlotOperationRule()); }
	 ruleDiskMoveEmptySlotOperation
{ after(grammarAccess.getDiskMoveEmptySlotOperationRule()); } 
	 EOF 
;

// Rule DiskMoveEmptySlotOperation
ruleDiskMoveEmptySlotOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getGroup()); }
		(rule__DiskMoveEmptySlotOperation__Group__0)
		{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskMarkSlotOperation
entryRuleDiskMarkSlotOperation
:
{ before(grammarAccess.getDiskMarkSlotOperationRule()); }
	 ruleDiskMarkSlotOperation
{ after(grammarAccess.getDiskMarkSlotOperationRule()); } 
	 EOF 
;

// Rule DiskMarkSlotOperation
ruleDiskMarkSlotOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskMarkSlotOperationAccess().getGroup()); }
		(rule__DiskMarkSlotOperation__Group__0)
		{ after(grammarAccess.getDiskMarkSlotOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskWaitOperation
entryRuleDiskWaitOperation
:
{ before(grammarAccess.getDiskWaitOperationRule()); }
	 ruleDiskWaitOperation
{ after(grammarAccess.getDiskWaitOperationRule()); } 
	 EOF 
;

// Rule DiskWaitOperation
ruleDiskWaitOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskWaitOperationAccess().getGroup()); }
		(rule__DiskWaitOperation__Group__0)
		{ after(grammarAccess.getDiskWaitOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCameraOperation
entryRuleCameraOperation
:
{ before(grammarAccess.getCameraOperationRule()); }
	 ruleCameraOperation
{ after(grammarAccess.getCameraOperationRule()); } 
	 EOF 
;

// Rule CameraOperation
ruleCameraOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCameraOperationAccess().getCameraScanOperationParserRuleCall()); }
		ruleCameraScanOperation
		{ after(grammarAccess.getCameraOperationAccess().getCameraScanOperationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCameraScanOperation
entryRuleCameraScanOperation
:
{ before(grammarAccess.getCameraScanOperationRule()); }
	 ruleCameraScanOperation
{ after(grammarAccess.getCameraScanOperationRule()); } 
	 EOF 
;

// Rule CameraScanOperation
ruleCameraScanOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCameraScanOperationAccess().getGroup()); }
		(rule__CameraScanOperation__Group__0)
		{ after(grammarAccess.getCameraScanOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoop
entryRuleLoop
:
{ before(grammarAccess.getLoopRule()); }
	 ruleLoop
{ after(grammarAccess.getLoopRule()); } 
	 EOF 
;

// Rule Loop
ruleLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopAccess().getForEachParserRuleCall()); }
		ruleForEach
		{ after(grammarAccess.getLoopAccess().getForEachParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForEach
entryRuleForEach
:
{ before(grammarAccess.getForEachRule()); }
	 ruleForEach
{ after(grammarAccess.getForEachRule()); } 
	 EOF 
;

// Rule ForEach
ruleForEach 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForEachAccess().getGroup()); }
		(rule__ForEach__Group__0)
		{ after(grammarAccess.getForEachAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalVariable
entryRuleLocalVariable
:
{ before(grammarAccess.getLocalVariableRule()); }
	 ruleLocalVariable
{ after(grammarAccess.getLocalVariableRule()); } 
	 EOF 
;

// Rule LocalVariable
ruleLocalVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalVariableAccess().getGroup()); }
		(rule__LocalVariable__Group__0)
		{ after(grammarAccess.getLocalVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalVariable
entryRuleGlobalVariable
:
{ before(grammarAccess.getGlobalVariableRule()); }
	 ruleGlobalVariable
{ after(grammarAccess.getGlobalVariableRule()); } 
	 EOF 
;

// Rule GlobalVariable
ruleGlobalVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalVariableAccess().getGroup()); }
		(rule__GlobalVariable__Group__0)
		{ after(grammarAccess.getGlobalVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeviceValue
entryRuleDeviceValue
:
{ before(grammarAccess.getDeviceValueRule()); }
	 ruleDeviceValue
{ after(grammarAccess.getDeviceValueRule()); } 
	 EOF 
;

// Rule DeviceValue
ruleDeviceValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeviceValueAccess().getAlternatives()); }
		(rule__DeviceValue__Alternatives)
		{ after(grammarAccess.getDeviceValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskSlotValue
entryRuleDiskSlotValue
:
{ before(grammarAccess.getDiskSlotValueRule()); }
	 ruleDiskSlotValue
{ after(grammarAccess.getDiskSlotValueRule()); } 
	 EOF 
;

// Rule DiskSlotValue
ruleDiskSlotValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskSlotValueAccess().getAlternatives()); }
		(rule__DiskSlotValue__Alternatives)
		{ after(grammarAccess.getDiskSlotValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableValue
entryRuleVariableValue
:
{ before(grammarAccess.getVariableValueRule()); }
	 ruleVariableValue
{ after(grammarAccess.getVariableValueRule()); } 
	 EOF 
;

// Rule VariableValue
ruleVariableValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableValueAccess().getAlternatives()); }
		(rule__VariableValue__Alternatives)
		{ after(grammarAccess.getVariableValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskStateValue
entryRuleDiskStateValue
:
{ before(grammarAccess.getDiskStateValueRule()); }
	 ruleDiskStateValue
{ after(grammarAccess.getDiskStateValueRule()); } 
	 EOF 
;

// Rule DiskStateValue
ruleDiskStateValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskStateValueAccess().getValueAssignment()); }
		(rule__DiskStateValue__ValueAssignment)
		{ after(grammarAccess.getDiskStateValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiskSlotStateValue
entryRuleDiskSlotStateValue
:
{ before(grammarAccess.getDiskSlotStateValueRule()); }
	 ruleDiskSlotStateValue
{ after(grammarAccess.getDiskSlotStateValueRule()); } 
	 EOF 
;

// Rule DiskSlotStateValue
ruleDiskSlotStateValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiskSlotStateValueAccess().getValueAssignment()); }
		(rule__DiskSlotStateValue__ValueAssignment)
		{ after(grammarAccess.getDiskSlotStateValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColorValue
entryRuleColorValue
:
{ before(grammarAccess.getColorValueRule()); }
	 ruleColorValue
{ after(grammarAccess.getColorValueRule()); } 
	 EOF 
;

// Rule ColorValue
ruleColorValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorValueAccess().getValueAssignment()); }
		(rule__ColorValue__ValueAssignment)
		{ after(grammarAccess.getColorValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getValueAssignment()); }
		(rule__Number__ValueAssignment)
		{ after(grammarAccess.getNumberAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule COMPARISON_OPERATOR
ruleCOMPARISON_OPERATOR
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISON_OPERATORAccess().getAlternatives()); }
		(rule__COMPARISON_OPERATOR__Alternatives)
		{ after(grammarAccess.getCOMPARISON_OPERATORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule COLOR
ruleCOLOR
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOLORAccess().getAlternatives()); }
		(rule__COLOR__Alternatives)
		{ after(grammarAccess.getCOLORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DISK_SLOT_STATES
ruleDISK_SLOT_STATES
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDISK_SLOT_STATESAccess().getAlternatives()); }
		(rule__DISK_SLOT_STATES__Alternatives)
		{ after(grammarAccess.getDISK_SLOT_STATESAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DISK_STATES
ruleDISK_STATES
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDISK_STATESAccess().getAlternatives()); }
		(rule__DISK_STATES__Alternatives)
		{ after(grammarAccess.getDISK_STATESAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TIME
ruleTIME
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIMEAccess().getAlternatives()); }
		(rule__TIME__Alternatives)
		{ after(grammarAccess.getTIMEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Device__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceAccess().getCraneParserRuleCall_0()); }
		ruleCrane
		{ after(grammarAccess.getDeviceAccess().getCraneParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeviceAccess().getDiskParserRuleCall_1()); }
		ruleDisk
		{ after(grammarAccess.getDeviceAccess().getDiskParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeviceAccess().getCameraParserRuleCall_2()); }
		ruleCamera
		{ after(grammarAccess.getDeviceAccess().getCameraParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getConditionalParserRuleCall_0()); }
		ruleConditional
		{ after(grammarAccess.getStatementAccess().getConditionalParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getOperationParserRuleCall_1()); }
		ruleOperation
		{ after(grammarAccess.getStatementAccess().getOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLoopParserRuleCall_2()); }
		ruleLoop
		{ after(grammarAccess.getStatementAccess().getLoopParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAccess().getDeviceConditionalParserRuleCall_0()); }
		ruleDeviceConditional
		{ after(grammarAccess.getConditionalAccess().getDeviceConditionalParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionalAccess().getVariableConditionalParserRuleCall_1()); }
		ruleVariableConditional
		{ after(grammarAccess.getConditionalAccess().getVariableConditionalParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getCraneOperationParserRuleCall_0()); }
		ruleCraneOperation
		{ after(grammarAccess.getOperationAccess().getCraneOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getDiskOperationParserRuleCall_1()); }
		ruleDiskOperation
		{ after(grammarAccess.getOperationAccess().getDiskOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getCameraOperationParserRuleCall_2()); }
		ruleCameraOperation
		{ after(grammarAccess.getOperationAccess().getCameraOperationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneOperationAccess().getCranePickupOperationParserRuleCall_0()); }
		ruleCranePickupOperation
		{ after(grammarAccess.getCraneOperationAccess().getCranePickupOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCraneOperationAccess().getCraneDropOperationParserRuleCall_1()); }
		ruleCraneDropOperation
		{ after(grammarAccess.getCraneOperationAccess().getCraneDropOperationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskOperationAccess().getDiskMoveEmptySlotOperationParserRuleCall_0()); }
		ruleDiskMoveEmptySlotOperation
		{ after(grammarAccess.getDiskOperationAccess().getDiskMoveEmptySlotOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDiskOperationAccess().getDiskMoveVariableSlotOperationParserRuleCall_1()); }
		ruleDiskMoveVariableSlotOperation
		{ after(grammarAccess.getDiskOperationAccess().getDiskMoveVariableSlotOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDiskOperationAccess().getDiskMoveSlotOperationParserRuleCall_2()); }
		ruleDiskMoveSlotOperation
		{ after(grammarAccess.getDiskOperationAccess().getDiskMoveSlotOperationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDiskOperationAccess().getDiskMarkSlotOperationParserRuleCall_3()); }
		ruleDiskMarkSlotOperation
		{ after(grammarAccess.getDiskOperationAccess().getDiskMarkSlotOperationParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getDiskOperationAccess().getDiskWaitOperationParserRuleCall_4()); }
		ruleDiskWaitOperation
		{ after(grammarAccess.getDiskOperationAccess().getDiskWaitOperationParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceValueAccess().getValueAssignment_0()); }
		(rule__DeviceValue__ValueAssignment_0)
		{ after(grammarAccess.getDeviceValueAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeviceValueAccess().getValueAssignment_1()); }
		(rule__DeviceValue__ValueAssignment_1)
		{ after(grammarAccess.getDeviceValueAccess().getValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeviceValueAccess().getRefAssignment_2()); }
		(rule__DeviceValue__RefAssignment_2)
		{ after(grammarAccess.getDeviceValueAccess().getRefAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskSlotValueAccess().getValueAssignment_0()); }
		(rule__DiskSlotValue__ValueAssignment_0)
		{ after(grammarAccess.getDiskSlotValueAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDiskSlotValueAccess().getValueAssignment_1()); }
		(rule__DiskSlotValue__ValueAssignment_1)
		{ after(grammarAccess.getDiskSlotValueAccess().getValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDiskSlotValueAccess().getRefAssignment_2()); }
		(rule__DiskSlotValue__RefAssignment_2)
		{ after(grammarAccess.getDiskSlotValueAccess().getRefAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getValueAssignment_0()); }
		(rule__VariableValue__ValueAssignment_0)
		{ after(grammarAccess.getVariableValueAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableValueAccess().getValueAssignment_1()); }
		(rule__VariableValue__ValueAssignment_1)
		{ after(grammarAccess.getVariableValueAccess().getValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableValueAccess().getValueAssignment_2()); }
		(rule__VariableValue__ValueAssignment_2)
		{ after(grammarAccess.getVariableValueAccess().getValueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariableValueAccess().getValueAssignment_3()); }
		(rule__VariableValue__ValueAssignment_3)
		{ after(grammarAccess.getVariableValueAccess().getValueAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getVariableValueAccess().getRefAssignment_4()); }
		(rule__VariableValue__RefAssignment_4)
		{ after(grammarAccess.getVariableValueAccess().getRefAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON_OPERATOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOMPARISON_OPERATORAccess().getUNDEFINEDEnumLiteralDeclaration_0()); }
		(Undefined)
		{ after(grammarAccess.getCOMPARISON_OPERATORAccess().getUNDEFINEDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISON_OPERATORAccess().getLESS_THANEnumLiteralDeclaration_1()); }
		(LessThan)
		{ after(grammarAccess.getCOMPARISON_OPERATORAccess().getLESS_THANEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISON_OPERATORAccess().getGREATER_THANEnumLiteralDeclaration_2()); }
		(GreaterThan)
		{ after(grammarAccess.getCOMPARISON_OPERATORAccess().getGREATER_THANEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCOMPARISON_OPERATORAccess().getNOTEnumLiteralDeclaration_3()); }
		(Not)
		{ after(grammarAccess.getCOMPARISON_OPERATORAccess().getNOTEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COLOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOLORAccess().getREDEnumLiteralDeclaration_0()); }
		(Red)
		{ after(grammarAccess.getCOLORAccess().getREDEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOLORAccess().getGREENEnumLiteralDeclaration_1()); }
		(Green)
		{ after(grammarAccess.getCOLORAccess().getGREENEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOLORAccess().getBLUEEnumLiteralDeclaration_2()); }
		(Blue)
		{ after(grammarAccess.getCOLORAccess().getBLUEEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DISK_SLOT_STATES__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDISK_SLOT_STATESAccess().getFREEEnumLiteralDeclaration_0()); }
		(Free)
		{ after(grammarAccess.getDISK_SLOT_STATESAccess().getFREEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDISK_SLOT_STATESAccess().getIN_PROGRESSEnumLiteralDeclaration_1()); }
		(In_progress)
		{ after(grammarAccess.getDISK_SLOT_STATESAccess().getIN_PROGRESSEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDISK_SLOT_STATESAccess().getCOMPLETEEnumLiteralDeclaration_2()); }
		(Complete)
		{ after(grammarAccess.getDISK_SLOT_STATESAccess().getCOMPLETEEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DISK_STATES__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDISK_STATESAccess().getFULLEnumLiteralDeclaration_0()); }
		(Full)
		{ after(grammarAccess.getDISK_STATESAccess().getFULLEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDISK_STATESAccess().getEMPTYEnumLiteralDeclaration_1()); }
		(Empty)
		{ after(grammarAccess.getDISK_STATESAccess().getEMPTYEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TIME__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTIMEAccess().getSECONDSEnumLiteralDeclaration_0()); }
		(Seconds)
		{ after(grammarAccess.getTIMEAccess().getSECONDSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_1()); }
		(Second)
		{ after(grammarAccess.getTIMEAccess().getSECONDEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTIMEAccess().getMINUTESEnumLiteralDeclaration_2()); }
		(Minutes)
		{ after(grammarAccess.getTIMEAccess().getMINUTESEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_3()); }
		(Minute)
		{ after(grammarAccess.getTIMEAccess().getMINUTEEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTIMEAccess().getHOURSEnumLiteralDeclaration_4()); }
		(Hours)
		{ after(grammarAccess.getTIMEAccess().getHOURSEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_5()); }
		(Hour)
		{ after(grammarAccess.getTIMEAccess().getHOUREnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getConfigurationsAssignment_0()); }
		(rule__Model__ConfigurationsAssignment_0)
		{ after(grammarAccess.getModelAccess().getConfigurationsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getConfigurationsAssignment_0()); }
		(rule__Model__ConfigurationsAssignment_0)*
		{ after(grammarAccess.getModelAccess().getConfigurationsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getStatementsAssignment_1()); }
		(rule__Model__StatementsAssignment_1)
		{ after(grammarAccess.getModelAccess().getStatementsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getStatementsAssignment_1()); }
		(rule__Model__StatementsAssignment_1)*
		{ after(grammarAccess.getModelAccess().getStatementsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Configuration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__0__Impl
	rule__Configuration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getCreateKeyword_0()); }
	Create
	{ after(grammarAccess.getConfigurationAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getDeviceAssignment_1()); }
	(rule__Configuration__DeviceAssignment_1)
	{ after(grammarAccess.getConfigurationAccess().getDeviceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Crane__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__0__Impl
	rule__Crane__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getCraneAction_0()); }
	()
	{ after(grammarAccess.getCraneAccess().getCraneAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__1__Impl
	rule__Crane__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getCraneKeyword_1()); }
	Crane
	{ after(grammarAccess.getCraneAccess().getCraneKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__2__Impl
	rule__Crane__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getNamedKeyword_2()); }
	Named
	{ after(grammarAccess.getCraneAccess().getNamedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__3__Impl
	rule__Crane__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getNameAssignment_3()); }
	(rule__Crane__NameAssignment_3)
	{ after(grammarAccess.getCraneAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__4__Impl
	rule__Crane__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getCraneAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__5__Impl
	rule__Crane__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCraneAccess().getTargetsAssignment_5()); }
		(rule__Crane__TargetsAssignment_5)
		{ after(grammarAccess.getCraneAccess().getTargetsAssignment_5()); }
	)
	(
		{ before(grammarAccess.getCraneAccess().getTargetsAssignment_5()); }
		(rule__Crane__TargetsAssignment_5)*
		{ after(grammarAccess.getCraneAccess().getTargetsAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Crane__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getCraneAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CranePositionParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePositionParameter__Group__0__Impl
	rule__CranePositionParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePositionParameterAccess().getCranePositionParameterAction_0()); }
	()
	{ after(grammarAccess.getCranePositionParameterAccess().getCranePositionParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePositionParameter__Group__1__Impl
	rule__CranePositionParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePositionParameterAccess().getWithKeyword_1()); }
	With
	{ after(grammarAccess.getCranePositionParameterAccess().getWithKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePositionParameter__Group__2__Impl
	rule__CranePositionParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePositionParameterAccess().getPositionKeyword_2()); }
	Position
	{ after(grammarAccess.getCranePositionParameterAccess().getPositionKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePositionParameter__Group__3__Impl
	rule__CranePositionParameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePositionParameterAccess().getAtKeyword_3()); }
	At
	{ after(grammarAccess.getCranePositionParameterAccess().getAtKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePositionParameter__Group__4__Impl
	rule__CranePositionParameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePositionParameterAccess().getDegreeAssignment_4()); }
	(rule__CranePositionParameter__DegreeAssignment_4)
	{ after(grammarAccess.getCranePositionParameterAccess().getDegreeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePositionParameter__Group__5__Impl
	rule__CranePositionParameter__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePositionParameterAccess().getNamedKeyword_5()); }
	Named
	{ after(grammarAccess.getCranePositionParameterAccess().getNamedKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePositionParameter__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePositionParameterAccess().getNameAssignment_6()); }
	(rule__CranePositionParameter__NameAssignment_6)
	{ after(grammarAccess.getCranePositionParameterAccess().getNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Disk__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disk__Group__0__Impl
	rule__Disk__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskAccess().getDiskAction_0()); }
	()
	{ after(grammarAccess.getDiskAccess().getDiskAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disk__Group__1__Impl
	rule__Disk__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskAccess().getDiskKeyword_1()); }
	Disk
	{ after(grammarAccess.getDiskAccess().getDiskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disk__Group__2__Impl
	rule__Disk__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskAccess().getNamedKeyword_2()); }
	Named
	{ after(grammarAccess.getDiskAccess().getNamedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disk__Group__3__Impl
	rule__Disk__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskAccess().getNameAssignment_3()); }
	(rule__Disk__NameAssignment_3)
	{ after(grammarAccess.getDiskAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disk__Group__4__Impl
	rule__Disk__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getDiskAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disk__Group__5__Impl
	rule__Disk__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskAccess().getSlotParameterAssignment_5()); }
	(rule__Disk__SlotParameterAssignment_5)
	{ after(grammarAccess.getDiskAccess().getSlotParameterAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disk__Group__6__Impl
	rule__Disk__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDiskAccess().getTargetsAssignment_6()); }
		(rule__Disk__TargetsAssignment_6)
		{ after(grammarAccess.getDiskAccess().getTargetsAssignment_6()); }
	)
	(
		{ before(grammarAccess.getDiskAccess().getTargetsAssignment_6()); }
		(rule__Disk__TargetsAssignment_6)*
		{ after(grammarAccess.getDiskAccess().getTargetsAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disk__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskAccess().getENDTerminalRuleCall_7()); }
	RULE_END
	{ after(grammarAccess.getDiskAccess().getENDTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiskSlotParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskSlotParameter__Group__0__Impl
	rule__DiskSlotParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskSlotParameterAccess().getDiskSlotParameterAction_0()); }
	()
	{ after(grammarAccess.getDiskSlotParameterAccess().getDiskSlotParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskSlotParameter__Group__1__Impl
	rule__DiskSlotParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskSlotParameterAccess().getWithKeyword_1()); }
	With
	{ after(grammarAccess.getDiskSlotParameterAccess().getWithKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskSlotParameter__Group__2__Impl
	rule__DiskSlotParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskSlotParameterAccess().getSizeAssignment_2()); }
	(rule__DiskSlotParameter__SizeAssignment_2)
	{ after(grammarAccess.getDiskSlotParameterAccess().getSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotParameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskSlotParameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotParameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskSlotParameterAccess().getSlotsKeyword_3()); }
	Slots
	{ after(grammarAccess.getDiskSlotParameterAccess().getSlotsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiskZoneParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskZoneParameter__Group__0__Impl
	rule__DiskZoneParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskZoneParameterAccess().getDiskZoneParameterAction_0()); }
	()
	{ after(grammarAccess.getDiskZoneParameterAccess().getDiskZoneParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskZoneParameter__Group__1__Impl
	rule__DiskZoneParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskZoneParameterAccess().getWithKeyword_1()); }
	With
	{ after(grammarAccess.getDiskZoneParameterAccess().getWithKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskZoneParameter__Group__2__Impl
	rule__DiskZoneParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskZoneParameterAccess().getZoneKeyword_2()); }
	Zone
	{ after(grammarAccess.getDiskZoneParameterAccess().getZoneKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskZoneParameter__Group__3__Impl
	rule__DiskZoneParameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskZoneParameterAccess().getNamedKeyword_3()); }
	Named
	{ after(grammarAccess.getDiskZoneParameterAccess().getNamedKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskZoneParameter__Group__4__Impl
	rule__DiskZoneParameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskZoneParameterAccess().getNameAssignment_4()); }
	(rule__DiskZoneParameter__NameAssignment_4)
	{ after(grammarAccess.getDiskZoneParameterAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskZoneParameter__Group__5__Impl
	rule__DiskZoneParameter__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskZoneParameterAccess().getAtKeyword_5()); }
	At
	{ after(grammarAccess.getDiskZoneParameterAccess().getAtKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskZoneParameter__Group__6__Impl
	rule__DiskZoneParameter__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskZoneParameterAccess().getSlotKeyword_6()); }
	Slot
	{ after(grammarAccess.getDiskZoneParameterAccess().getSlotKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskZoneParameter__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskZoneParameterAccess().getSlotAssignment_7()); }
	(rule__DiskZoneParameter__SlotAssignment_7)
	{ after(grammarAccess.getDiskZoneParameterAccess().getSlotAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Camera__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__0__Impl
	rule__Camera__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getCameraAction_0()); }
	()
	{ after(grammarAccess.getCameraAccess().getCameraAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__1__Impl
	rule__Camera__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getCameraKeyword_1()); }
	Camera
	{ after(grammarAccess.getCameraAccess().getCameraKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__2__Impl
	rule__Camera__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getNamedKeyword_2()); }
	Named
	{ after(grammarAccess.getCameraAccess().getNamedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__3__Impl
	rule__Camera__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getNameAssignment_3()); }
	(rule__Camera__NameAssignment_3)
	{ after(grammarAccess.getCameraAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__4__Impl
	rule__Camera__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getCameraAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__5__Impl
	rule__Camera__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCameraAccess().getTargetsAssignment_5()); }
		(rule__Camera__TargetsAssignment_5)
		{ after(grammarAccess.getCameraAccess().getTargetsAssignment_5()); }
	)
	(
		{ before(grammarAccess.getCameraAccess().getTargetsAssignment_5()); }
		(rule__Camera__TargetsAssignment_5)*
		{ after(grammarAccess.getCameraAccess().getTargetsAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Camera__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getCameraAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CameraColorParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraColorParameter__Group__0__Impl
	rule__CameraColorParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColorParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraColorParameterAccess().getCameraColorParameterAction_0()); }
	()
	{ after(grammarAccess.getCameraColorParameterAccess().getCameraColorParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColorParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraColorParameter__Group__1__Impl
	rule__CameraColorParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColorParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraColorParameterAccess().getWithKeyword_1()); }
	With
	{ after(grammarAccess.getCameraColorParameterAccess().getWithKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColorParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraColorParameter__Group__2__Impl
	rule__CameraColorParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColorParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraColorParameterAccess().getScannableKeyword_2()); }
	Scannable
	{ after(grammarAccess.getCameraColorParameterAccess().getScannableKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColorParameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraColorParameter__Group__3__Impl
	rule__CameraColorParameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColorParameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraColorParameterAccess().getColorKeyword_3()); }
	Color
	{ after(grammarAccess.getCameraColorParameterAccess().getColorKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColorParameter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraColorParameter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColorParameter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraColorParameterAccess().getColorAssignment_4()); }
	(rule__CameraColorParameter__ColorAssignment_4)
	{ after(grammarAccess.getCameraColorParameterAccess().getColorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeviceConditional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__0__Impl
	rule__DeviceConditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getDeviceConditionalAction_0()); }
	()
	{ after(grammarAccess.getDeviceConditionalAccess().getDeviceConditionalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__1__Impl
	rule__DeviceConditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getIfKeyword_1()); }
	If
	{ after(grammarAccess.getDeviceConditionalAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__2__Impl
	rule__DeviceConditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getDeviceKeyword_2()); }
	Device
	{ after(grammarAccess.getDeviceConditionalAccess().getDeviceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__3__Impl
	rule__DeviceConditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getDeviceAssignment_3()); }
	(rule__DeviceConditional__DeviceAssignment_3)
	{ after(grammarAccess.getDeviceConditionalAccess().getDeviceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__4__Impl
	rule__DeviceConditional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getIsKeyword_4()); }
	Is
	{ after(grammarAccess.getDeviceConditionalAccess().getIsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__5__Impl
	rule__DeviceConditional__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getNot_operatorAssignment_5()); }
	(rule__DeviceConditional__Not_operatorAssignment_5)?
	{ after(grammarAccess.getDeviceConditionalAccess().getNot_operatorAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__6__Impl
	rule__DeviceConditional__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getAtKeyword_6()); }
	(At)?
	{ after(grammarAccess.getDeviceConditionalAccess().getAtKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__7__Impl
	rule__DeviceConditional__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getDeviceValueAssignment_7()); }
	(rule__DeviceConditional__DeviceValueAssignment_7)
	{ after(grammarAccess.getDeviceConditionalAccess().getDeviceValueAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__8__Impl
	rule__DeviceConditional__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getThenKeyword_8()); }
	Then
	{ after(grammarAccess.getDeviceConditionalAccess().getThenKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__9__Impl
	rule__DeviceConditional__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getBEGINTerminalRuleCall_9()); }
	RULE_BEGIN
	{ after(grammarAccess.getDeviceConditionalAccess().getBEGINTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__10__Impl
	rule__DeviceConditional__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getStatementsAssignment_10()); }
	(rule__DeviceConditional__StatementsAssignment_10)*
	{ after(grammarAccess.getDeviceConditionalAccess().getStatementsAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeviceConditional__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeviceConditionalAccess().getENDTerminalRuleCall_11()); }
	RULE_END
	{ after(grammarAccess.getDeviceConditionalAccess().getENDTerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableConditional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__0__Impl
	rule__VariableConditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getVariableConditionalAction_0()); }
	()
	{ after(grammarAccess.getVariableConditionalAccess().getVariableConditionalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__1__Impl
	rule__VariableConditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getIfKeyword_1()); }
	If
	{ after(grammarAccess.getVariableConditionalAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__2__Impl
	rule__VariableConditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getVariableKeyword_2()); }
	Variable
	{ after(grammarAccess.getVariableConditionalAccess().getVariableKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__3__Impl
	rule__VariableConditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getVariableAssignment_3()); }
	(rule__VariableConditional__VariableAssignment_3)
	{ after(grammarAccess.getVariableConditionalAccess().getVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__4__Impl
	rule__VariableConditional__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getIsKeyword_4()); }
	Is
	{ after(grammarAccess.getVariableConditionalAccess().getIsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__5__Impl
	rule__VariableConditional__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getComparison_operatorAssignment_5()); }
	(rule__VariableConditional__Comparison_operatorAssignment_5)?
	{ after(grammarAccess.getVariableConditionalAccess().getComparison_operatorAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__6__Impl
	rule__VariableConditional__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getVariableValueAssignment_6()); }
	(rule__VariableConditional__VariableValueAssignment_6)
	{ after(grammarAccess.getVariableConditionalAccess().getVariableValueAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__7__Impl
	rule__VariableConditional__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getThenKeyword_7()); }
	Then
	{ after(grammarAccess.getVariableConditionalAccess().getThenKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__8__Impl
	rule__VariableConditional__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getBEGINTerminalRuleCall_8()); }
	RULE_BEGIN
	{ after(grammarAccess.getVariableConditionalAccess().getBEGINTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__9__Impl
	rule__VariableConditional__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getStatementsAssignment_9()); }
	(rule__VariableConditional__StatementsAssignment_9)*
	{ after(grammarAccess.getVariableConditionalAccess().getStatementsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableConditional__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableConditionalAccess().getENDTerminalRuleCall_10()); }
	RULE_END
	{ after(grammarAccess.getVariableConditionalAccess().getENDTerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CranePickupOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickupOperation__Group__0__Impl
	rule__CranePickupOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupOperationAccess().getCranePickupOperationAction_0()); }
	()
	{ after(grammarAccess.getCranePickupOperationAccess().getCranePickupOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickupOperation__Group__1__Impl
	rule__CranePickupOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupOperationAccess().getDeviceAssignment_1()); }
	(rule__CranePickupOperation__DeviceAssignment_1)
	{ after(grammarAccess.getCranePickupOperationAccess().getDeviceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickupOperation__Group__2__Impl
	rule__CranePickupOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupOperationAccess().getPickupKeyword_2()); }
	Pickup
	{ after(grammarAccess.getCranePickupOperationAccess().getPickupKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickupOperation__Group__3__Impl
	rule__CranePickupOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupOperationAccess().getItemKeyword_3()); }
	Item
	{ after(grammarAccess.getCranePickupOperationAccess().getItemKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickupOperation__Group__4__Impl
	rule__CranePickupOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupOperationAccess().getAtKeyword_4()); }
	At
	{ after(grammarAccess.getCranePickupOperationAccess().getAtKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CranePickupOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCranePickupOperationAccess().getTargetAssignment_5()); }
	(rule__CranePickupOperation__TargetAssignment_5)
	{ after(grammarAccess.getCranePickupOperationAccess().getTargetAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CraneDropOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDropOperation__Group__0__Impl
	rule__CraneDropOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropOperationAccess().getCraneDropOperationAction_0()); }
	()
	{ after(grammarAccess.getCraneDropOperationAccess().getCraneDropOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDropOperation__Group__1__Impl
	rule__CraneDropOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropOperationAccess().getDeviceAssignment_1()); }
	(rule__CraneDropOperation__DeviceAssignment_1)
	{ after(grammarAccess.getCraneDropOperationAccess().getDeviceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDropOperation__Group__2__Impl
	rule__CraneDropOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropOperationAccess().getDropKeyword_2()); }
	Drop
	{ after(grammarAccess.getCraneDropOperationAccess().getDropKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDropOperation__Group__3__Impl
	rule__CraneDropOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropOperationAccess().getItemKeyword_3()); }
	Item
	{ after(grammarAccess.getCraneDropOperationAccess().getItemKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDropOperation__Group__4__Impl
	rule__CraneDropOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropOperationAccess().getAtKeyword_4()); }
	At
	{ after(grammarAccess.getCraneDropOperationAccess().getAtKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CraneDropOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCraneDropOperationAccess().getTargetAssignment_5()); }
	(rule__CraneDropOperation__TargetAssignment_5)
	{ after(grammarAccess.getCraneDropOperationAccess().getTargetAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiskMoveSlotOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveSlotOperation__Group__0__Impl
	rule__DiskMoveSlotOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveSlotOperationAccess().getDiskMoveSlotOperationAction_0()); }
	()
	{ after(grammarAccess.getDiskMoveSlotOperationAccess().getDiskMoveSlotOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveSlotOperation__Group__1__Impl
	rule__DiskMoveSlotOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveSlotOperationAccess().getDeviceAssignment_1()); }
	(rule__DiskMoveSlotOperation__DeviceAssignment_1)
	{ after(grammarAccess.getDiskMoveSlotOperationAccess().getDeviceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveSlotOperation__Group__2__Impl
	rule__DiskMoveSlotOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveSlotOperationAccess().getMoveKeyword_2()); }
	Move
	{ after(grammarAccess.getDiskMoveSlotOperationAccess().getMoveKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveSlotOperation__Group__3__Impl
	rule__DiskMoveSlotOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveSlotOperationAccess().getSlotKeyword_3()); }
	Slot
	{ after(grammarAccess.getDiskMoveSlotOperationAccess().getSlotKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveSlotOperation__Group__4__Impl
	rule__DiskMoveSlotOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveSlotOperationAccess().getAtKeyword_4()); }
	At
	{ after(grammarAccess.getDiskMoveSlotOperationAccess().getAtKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveSlotOperation__Group__5__Impl
	rule__DiskMoveSlotOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveSlotOperationAccess().getSourceAssignment_5()); }
	(rule__DiskMoveSlotOperation__SourceAssignment_5)
	{ after(grammarAccess.getDiskMoveSlotOperationAccess().getSourceAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveSlotOperation__Group__6__Impl
	rule__DiskMoveSlotOperation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveSlotOperationAccess().getToKeyword_6()); }
	To
	{ after(grammarAccess.getDiskMoveSlotOperationAccess().getToKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveSlotOperation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveSlotOperationAccess().getTargetAssignment_7()); }
	(rule__DiskMoveSlotOperation__TargetAssignment_7)
	{ after(grammarAccess.getDiskMoveSlotOperationAccess().getTargetAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiskMoveVariableSlotOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveVariableSlotOperation__Group__0__Impl
	rule__DiskMoveVariableSlotOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getDiskMoveVariableSlotOperationAction_0()); }
	()
	{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getDiskMoveVariableSlotOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveVariableSlotOperation__Group__1__Impl
	rule__DiskMoveVariableSlotOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getDeviceAssignment_1()); }
	(rule__DiskMoveVariableSlotOperation__DeviceAssignment_1)
	{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getDeviceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveVariableSlotOperation__Group__2__Impl
	rule__DiskMoveVariableSlotOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getMoveKeyword_2()); }
	Move
	{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getMoveKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveVariableSlotOperation__Group__3__Impl
	rule__DiskMoveVariableSlotOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getSlotKeyword_3()); }
	Slot
	{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getSlotKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveVariableSlotOperation__Group__4__Impl
	rule__DiskMoveVariableSlotOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getOfKeyword_4()); }
	Of
	{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getOfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveVariableSlotOperation__Group__5__Impl
	rule__DiskMoveVariableSlotOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getVariableAssignment_5()); }
	(rule__DiskMoveVariableSlotOperation__VariableAssignment_5)
	{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getVariableAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveVariableSlotOperation__Group__6__Impl
	rule__DiskMoveVariableSlotOperation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getToKeyword_6()); }
	To
	{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getToKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveVariableSlotOperation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getTargetAssignment_7()); }
	(rule__DiskMoveVariableSlotOperation__TargetAssignment_7)
	{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getTargetAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiskMoveEmptySlotOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveEmptySlotOperation__Group__0__Impl
	rule__DiskMoveEmptySlotOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getDiskMoveEmptySlotOperationAction_0()); }
	()
	{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getDiskMoveEmptySlotOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveEmptySlotOperation__Group__1__Impl
	rule__DiskMoveEmptySlotOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getDeviceAssignment_1()); }
	(rule__DiskMoveEmptySlotOperation__DeviceAssignment_1)
	{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getDeviceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveEmptySlotOperation__Group__2__Impl
	rule__DiskMoveEmptySlotOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getMoveKeyword_2()); }
	Move
	{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getMoveKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveEmptySlotOperation__Group__3__Impl
	rule__DiskMoveEmptySlotOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getEmptyKeyword_3()); }
	Empty
	{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getEmptyKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveEmptySlotOperation__Group__4__Impl
	rule__DiskMoveEmptySlotOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getSlotKeyword_4()); }
	Slot
	{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getSlotKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveEmptySlotOperation__Group__5__Impl
	rule__DiskMoveEmptySlotOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getToKeyword_5()); }
	To
	{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getToKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMoveEmptySlotOperation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getTargetAssignment_6()); }
	(rule__DiskMoveEmptySlotOperation__TargetAssignment_6)
	{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getTargetAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiskMarkSlotOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group__0__Impl
	rule__DiskMarkSlotOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getDiskMarkSlotOperationAction_0()); }
	()
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getDiskMarkSlotOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group__1__Impl
	rule__DiskMarkSlotOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getDeviceAssignment_1()); }
	(rule__DiskMarkSlotOperation__DeviceAssignment_1)
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getDeviceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group__2__Impl
	rule__DiskMarkSlotOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getMarkKeyword_2()); }
	Mark
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getMarkKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group__3__Impl
	rule__DiskMarkSlotOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getSlotKeyword_3()); }
	Slot
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getSlotKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group__4__Impl
	rule__DiskMarkSlotOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getAtKeyword_4()); }
	At
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getAtKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group__5__Impl
	rule__DiskMarkSlotOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getTargetAssignment_5()); }
	(rule__DiskMarkSlotOperation__TargetAssignment_5)
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getTargetAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group__6__Impl
	rule__DiskMarkSlotOperation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getAsKeyword_6()); }
	As
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getAsKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group__7__Impl
	rule__DiskMarkSlotOperation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getDiskSlotValueAssignment_7()); }
	(rule__DiskMarkSlotOperation__DiskSlotValueAssignment_7)
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getDiskSlotValueAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getGroup_8()); }
	(rule__DiskMarkSlotOperation__Group_8__0)?
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiskMarkSlotOperation__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group_8__0__Impl
	rule__DiskMarkSlotOperation__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getInKeyword_8_0()); }
	In
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getInKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group_8__1__Impl
	rule__DiskMarkSlotOperation__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getQuantityAssignment_8_1()); }
	(rule__DiskMarkSlotOperation__QuantityAssignment_8_1)
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getQuantityAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskMarkSlotOperation__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskMarkSlotOperationAccess().getMeasureAssignment_8_2()); }
	(rule__DiskMarkSlotOperation__MeasureAssignment_8_2)
	{ after(grammarAccess.getDiskMarkSlotOperationAccess().getMeasureAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiskWaitOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskWaitOperation__Group__0__Impl
	rule__DiskWaitOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskWaitOperationAccess().getDiskWaitOperationAction_0()); }
	()
	{ after(grammarAccess.getDiskWaitOperationAccess().getDiskWaitOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskWaitOperation__Group__1__Impl
	rule__DiskWaitOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskWaitOperationAccess().getDeviceAssignment_1()); }
	(rule__DiskWaitOperation__DeviceAssignment_1)
	{ after(grammarAccess.getDiskWaitOperationAccess().getDeviceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskWaitOperation__Group__2__Impl
	rule__DiskWaitOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskWaitOperationAccess().getWaitKeyword_2()); }
	Wait
	{ after(grammarAccess.getDiskWaitOperationAccess().getWaitKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskWaitOperation__Group__3__Impl
	rule__DiskWaitOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskWaitOperationAccess().getForKeyword_3()); }
	For
	{ after(grammarAccess.getDiskWaitOperationAccess().getForKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskWaitOperation__Group__4__Impl
	rule__DiskWaitOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskWaitOperationAccess().getNewKeyword_4()); }
	New
	{ after(grammarAccess.getDiskWaitOperationAccess().getNewKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiskWaitOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiskWaitOperationAccess().getItemKeyword_5()); }
	Item
	{ after(grammarAccess.getDiskWaitOperationAccess().getItemKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CameraScanOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraScanOperation__Group__0__Impl
	rule__CameraScanOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraScanOperationAccess().getCameraScanOperationAction_0()); }
	()
	{ after(grammarAccess.getCameraScanOperationAccess().getCameraScanOperationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraScanOperation__Group__1__Impl
	rule__CameraScanOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraScanOperationAccess().getDeviceAssignment_1()); }
	(rule__CameraScanOperation__DeviceAssignment_1)
	{ after(grammarAccess.getCameraScanOperationAccess().getDeviceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraScanOperation__Group__2__Impl
	rule__CameraScanOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraScanOperationAccess().getScanKeyword_2()); }
	Scan
	{ after(grammarAccess.getCameraScanOperationAccess().getScanKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraScanOperation__Group__3__Impl
	rule__CameraScanOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraScanOperationAccess().getColorKeyword_3()); }
	Color
	{ after(grammarAccess.getCameraScanOperationAccess().getColorKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraScanOperation__Group__4__Impl
	rule__CameraScanOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraScanOperationAccess().getIntoKeyword_4()); }
	Into
	{ after(grammarAccess.getCameraScanOperationAccess().getIntoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CameraScanOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCameraScanOperationAccess().getVariableAssignment_5()); }
	(rule__CameraScanOperation__VariableAssignment_5)
	{ after(grammarAccess.getCameraScanOperationAccess().getVariableAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForEach__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__0__Impl
	rule__ForEach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getForEachAction_0()); }
	()
	{ after(grammarAccess.getForEachAccess().getForEachAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__1__Impl
	rule__ForEach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getForKeyword_1()); }
	For
	{ after(grammarAccess.getForEachAccess().getForKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__2__Impl
	rule__ForEach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getEachKeyword_2()); }
	Each
	{ after(grammarAccess.getForEachAccess().getEachKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__3__Impl
	rule__ForEach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getVariableAssignment_3()); }
	(rule__ForEach__VariableAssignment_3)
	{ after(grammarAccess.getForEachAccess().getVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__4__Impl
	rule__ForEach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getInKeyword_4()); }
	In
	{ after(grammarAccess.getForEachAccess().getInKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__5__Impl
	rule__ForEach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getDeviceAssignment_5()); }
	(rule__ForEach__DeviceAssignment_5)
	{ after(grammarAccess.getForEachAccess().getDeviceAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__6__Impl
	rule__ForEach__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getThatKeyword_6()); }
	That
	{ after(grammarAccess.getForEachAccess().getThatKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__7__Impl
	rule__ForEach__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getIsKeyword_7()); }
	Is
	{ after(grammarAccess.getForEachAccess().getIsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__8__Impl
	rule__ForEach__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getOperatorAssignment_8()); }
	(rule__ForEach__OperatorAssignment_8)?
	{ after(grammarAccess.getForEachAccess().getOperatorAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__9__Impl
	rule__ForEach__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getVariableValueAssignment_9()); }
	(rule__ForEach__VariableValueAssignment_9)
	{ after(grammarAccess.getForEachAccess().getVariableValueAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__10__Impl
	rule__ForEach__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getThenKeyword_10()); }
	Then
	{ after(grammarAccess.getForEachAccess().getThenKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__11__Impl
	rule__ForEach__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getBEGINTerminalRuleCall_11()); }
	RULE_BEGIN
	{ after(grammarAccess.getForEachAccess().getBEGINTerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__12__Impl
	rule__ForEach__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getStatementsAssignment_12()); }
	(rule__ForEach__StatementsAssignment_12)*
	{ after(grammarAccess.getForEachAccess().getStatementsAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForEach__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForEachAccess().getENDTerminalRuleCall_13()); }
	RULE_END
	{ after(grammarAccess.getForEachAccess().getENDTerminalRuleCall_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__0__Impl
	rule__LocalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getLocalVariableAction_0()); }
	()
	{ after(grammarAccess.getLocalVariableAccess().getLocalVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableAccess().getNameAssignment_1()); }
	(rule__LocalVariable__NameAssignment_1)
	{ after(grammarAccess.getLocalVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVariable__Group__0__Impl
	rule__GlobalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVariableAccess().getGlobalVariableAction_0()); }
	()
	{ after(grammarAccess.getGlobalVariableAccess().getGlobalVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVariableAccess().getNameAssignment_1()); }
	(rule__GlobalVariable__NameAssignment_1)
	{ after(grammarAccess.getGlobalVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ConfigurationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConfigurationsConfigurationParserRuleCall_0_0()); }
		ruleConfiguration
		{ after(grammarAccess.getModelAccess().getConfigurationsConfigurationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_0()); }
		ruleStatement
		{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__DeviceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationAccess().getDeviceDeviceParserRuleCall_1_0()); }
		ruleDevice
		{ after(grammarAccess.getConfigurationAccess().getDeviceDeviceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getCraneAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Crane__TargetsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneAccess().getTargetsCraneParameterParserRuleCall_5_0()); }
		ruleCraneParameter
		{ after(grammarAccess.getCraneAccess().getTargetsCraneParameterParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__DegreeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCranePositionParameterAccess().getDegreeINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getCranePositionParameterAccess().getDegreeINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePositionParameter__NameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCranePositionParameterAccess().getNameIDTerminalRuleCall_6_0()); }
		RULE_ID
		{ after(grammarAccess.getCranePositionParameterAccess().getNameIDTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getDiskAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__SlotParameterAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskAccess().getSlotParameterDiskSlotParameterParserRuleCall_5_0()); }
		ruleDiskSlotParameter
		{ after(grammarAccess.getDiskAccess().getSlotParameterDiskSlotParameterParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disk__TargetsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskAccess().getTargetsDiskParameterParserRuleCall_6_0()); }
		ruleDiskParameter
		{ after(grammarAccess.getDiskAccess().getTargetsDiskParameterParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotParameter__SizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskSlotParameterAccess().getSizeINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDiskSlotParameterAccess().getSizeINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskZoneParameterAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getDiskZoneParameterAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskZoneParameter__SlotAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskZoneParameterAccess().getSlotINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getDiskZoneParameterAccess().getSlotINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getCameraAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Camera__TargetsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraAccess().getTargetsCameraParameterParserRuleCall_5_0()); }
		ruleCameraParameter
		{ after(grammarAccess.getCameraAccess().getTargetsCameraParameterParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraColorParameter__ColorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraColorParameterAccess().getColorCOLOREnumRuleCall_4_0()); }
		ruleCOLOR
		{ after(grammarAccess.getCameraColorParameterAccess().getColorCOLOREnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__DeviceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getDeviceDeviceCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDeviceConditionalAccess().getDeviceDeviceIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeviceConditionalAccess().getDeviceDeviceIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDeviceConditionalAccess().getDeviceDeviceCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__Not_operatorAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getNot_operatorNotKeyword_5_0()); }
		(
			{ before(grammarAccess.getDeviceConditionalAccess().getNot_operatorNotKeyword_5_0()); }
			Not
			{ after(grammarAccess.getDeviceConditionalAccess().getNot_operatorNotKeyword_5_0()); }
		)
		{ after(grammarAccess.getDeviceConditionalAccess().getNot_operatorNotKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__DeviceValueAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getDeviceValueDeviceValueParserRuleCall_7_0()); }
		ruleDeviceValue
		{ after(grammarAccess.getDeviceConditionalAccess().getDeviceValueDeviceValueParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceConditional__StatementsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceConditionalAccess().getStatementsStatementParserRuleCall_10_0()); }
		ruleStatement
		{ after(grammarAccess.getDeviceConditionalAccess().getStatementsStatementParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__VariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getVariableVariableCrossReference_3_0()); }
		(
			{ before(grammarAccess.getVariableConditionalAccess().getVariableVariableIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableConditionalAccess().getVariableVariableIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getVariableConditionalAccess().getVariableVariableCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__Comparison_operatorAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getComparison_operatorCOMPARISON_OPERATOREnumRuleCall_5_0()); }
		ruleCOMPARISON_OPERATOR
		{ after(grammarAccess.getVariableConditionalAccess().getComparison_operatorCOMPARISON_OPERATOREnumRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__VariableValueAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getVariableValueVariableValueParserRuleCall_6_0()); }
		ruleVariableValue
		{ after(grammarAccess.getVariableConditionalAccess().getVariableValueVariableValueParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableConditional__StatementsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableConditionalAccess().getStatementsStatementParserRuleCall_9_0()); }
		ruleStatement
		{ after(grammarAccess.getVariableConditionalAccess().getStatementsStatementParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__DeviceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCranePickupOperationAccess().getDeviceCraneCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCranePickupOperationAccess().getDeviceCraneIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCranePickupOperationAccess().getDeviceCraneIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCranePickupOperationAccess().getDeviceCraneCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CranePickupOperation__TargetAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCranePickupOperationAccess().getTargetCraneParameterCrossReference_5_0()); }
		(
			{ before(grammarAccess.getCranePickupOperationAccess().getTargetCraneParameterIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCranePickupOperationAccess().getTargetCraneParameterIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getCranePickupOperationAccess().getTargetCraneParameterCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__DeviceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneDropOperationAccess().getDeviceCraneCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCraneDropOperationAccess().getDeviceCraneIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCraneDropOperationAccess().getDeviceCraneIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCraneDropOperationAccess().getDeviceCraneCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CraneDropOperation__TargetAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCraneDropOperationAccess().getTargetCraneParameterCrossReference_5_0()); }
		(
			{ before(grammarAccess.getCraneDropOperationAccess().getTargetCraneParameterIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCraneDropOperationAccess().getTargetCraneParameterIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getCraneDropOperationAccess().getTargetCraneParameterCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__DeviceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMoveSlotOperationAccess().getDeviceDiskCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDiskMoveSlotOperationAccess().getDeviceDiskIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskMoveSlotOperationAccess().getDeviceDiskIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDiskMoveSlotOperationAccess().getDeviceDiskCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__SourceAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMoveSlotOperationAccess().getSourceDiskZoneParameterCrossReference_5_0()); }
		(
			{ before(grammarAccess.getDiskMoveSlotOperationAccess().getSourceDiskZoneParameterIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskMoveSlotOperationAccess().getSourceDiskZoneParameterIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getDiskMoveSlotOperationAccess().getSourceDiskZoneParameterCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveSlotOperation__TargetAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMoveSlotOperationAccess().getTargetDiskZoneParameterCrossReference_7_0()); }
		(
			{ before(grammarAccess.getDiskMoveSlotOperationAccess().getTargetDiskZoneParameterIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskMoveSlotOperationAccess().getTargetDiskZoneParameterIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getDiskMoveSlotOperationAccess().getTargetDiskZoneParameterCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__DeviceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getDeviceDiskCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getDeviceDiskIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getDeviceDiskIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getDeviceDiskCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__VariableAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getVariableVariableCrossReference_5_0()); }
		(
			{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getVariableVariableIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getVariableVariableIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getVariableVariableCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveVariableSlotOperation__TargetAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getTargetDiskZoneParameterCrossReference_7_0()); }
		(
			{ before(grammarAccess.getDiskMoveVariableSlotOperationAccess().getTargetDiskZoneParameterIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getTargetDiskZoneParameterIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getDiskMoveVariableSlotOperationAccess().getTargetDiskZoneParameterCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__DeviceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getDeviceDiskCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getDeviceDiskIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getDeviceDiskIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getDeviceDiskCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMoveEmptySlotOperation__TargetAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getTargetDiskZoneParameterCrossReference_6_0()); }
		(
			{ before(grammarAccess.getDiskMoveEmptySlotOperationAccess().getTargetDiskZoneParameterIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getTargetDiskZoneParameterIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getDiskMoveEmptySlotOperationAccess().getTargetDiskZoneParameterCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__DeviceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMarkSlotOperationAccess().getDeviceDiskCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDiskMarkSlotOperationAccess().getDeviceDiskIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskMarkSlotOperationAccess().getDeviceDiskIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDiskMarkSlotOperationAccess().getDeviceDiskCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__TargetAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMarkSlotOperationAccess().getTargetDiskZoneParameterCrossReference_5_0()); }
		(
			{ before(grammarAccess.getDiskMarkSlotOperationAccess().getTargetDiskZoneParameterIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskMarkSlotOperationAccess().getTargetDiskZoneParameterIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getDiskMarkSlotOperationAccess().getTargetDiskZoneParameterCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__DiskSlotValueAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMarkSlotOperationAccess().getDiskSlotValueDiskSlotValueParserRuleCall_7_0()); }
		ruleDiskSlotValue
		{ after(grammarAccess.getDiskMarkSlotOperationAccess().getDiskSlotValueDiskSlotValueParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__QuantityAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMarkSlotOperationAccess().getQuantityINTTerminalRuleCall_8_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDiskMarkSlotOperationAccess().getQuantityINTTerminalRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskMarkSlotOperation__MeasureAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskMarkSlotOperationAccess().getMeasureTIMEEnumRuleCall_8_2_0()); }
		ruleTIME
		{ after(grammarAccess.getDiskMarkSlotOperationAccess().getMeasureTIMEEnumRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskWaitOperation__DeviceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskWaitOperationAccess().getDeviceDiskCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDiskWaitOperationAccess().getDeviceDiskIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskWaitOperationAccess().getDeviceDiskIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDiskWaitOperationAccess().getDeviceDiskCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__DeviceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraScanOperationAccess().getDeviceCameraCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCameraScanOperationAccess().getDeviceCameraIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCameraScanOperationAccess().getDeviceCameraIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCameraScanOperationAccess().getDeviceCameraCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CameraScanOperation__VariableAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCameraScanOperationAccess().getVariableGlobalVariableParserRuleCall_5_0()); }
		ruleGlobalVariable
		{ after(grammarAccess.getCameraScanOperationAccess().getVariableGlobalVariableParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__VariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachAccess().getVariableLocalVariableParserRuleCall_3_0()); }
		ruleLocalVariable
		{ after(grammarAccess.getForEachAccess().getVariableLocalVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__DeviceAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachAccess().getDeviceDeviceCrossReference_5_0()); }
		(
			{ before(grammarAccess.getForEachAccess().getDeviceDeviceIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForEachAccess().getDeviceDeviceIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getForEachAccess().getDeviceDeviceCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__OperatorAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachAccess().getOperatorNotKeyword_8_0()); }
		(
			{ before(grammarAccess.getForEachAccess().getOperatorNotKeyword_8_0()); }
			Not
			{ after(grammarAccess.getForEachAccess().getOperatorNotKeyword_8_0()); }
		)
		{ after(grammarAccess.getForEachAccess().getOperatorNotKeyword_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__VariableValueAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachAccess().getVariableValueVariableValueParserRuleCall_9_0()); }
		ruleVariableValue
		{ after(grammarAccess.getForEachAccess().getVariableValueVariableValueParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEach__StatementsAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForEachAccess().getStatementsStatementParserRuleCall_12_0()); }
		ruleStatement
		{ after(grammarAccess.getForEachAccess().getStatementsStatementParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGlobalVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceValue__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceValueAccess().getValueDiskStateValueParserRuleCall_0_0()); }
		ruleDiskStateValue
		{ after(grammarAccess.getDeviceValueAccess().getValueDiskStateValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceValueAccess().getValueColorValueParserRuleCall_1_0()); }
		ruleColorValue
		{ after(grammarAccess.getDeviceValueAccess().getValueColorValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeviceValue__RefAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeviceValueAccess().getRefParameterCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDeviceValueAccess().getRefParameterIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeviceValueAccess().getRefParameterIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDeviceValueAccess().getRefParameterCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotValue__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskSlotValueAccess().getValueDiskSlotStateValueParserRuleCall_0_0()); }
		ruleDiskSlotStateValue
		{ after(grammarAccess.getDiskSlotValueAccess().getValueDiskSlotStateValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskSlotValueAccess().getValueColorValueParserRuleCall_1_0()); }
		ruleColorValue
		{ after(grammarAccess.getDiskSlotValueAccess().getValueColorValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotValue__RefAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskSlotValueAccess().getRefVariableCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDiskSlotValueAccess().getRefVariableIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDiskSlotValueAccess().getRefVariableIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDiskSlotValueAccess().getRefVariableCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getValueDiskSlotStateValueParserRuleCall_0_0()); }
		ruleDiskSlotStateValue
		{ after(grammarAccess.getVariableValueAccess().getValueDiskSlotStateValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getValueColorValueParserRuleCall_1_0()); }
		ruleColorValue
		{ after(grammarAccess.getVariableValueAccess().getValueColorValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getValueNumberParserRuleCall_2_0()); }
		ruleNumber
		{ after(grammarAccess.getVariableValueAccess().getValueNumberParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getValueDiskStateValueParserRuleCall_3_0()); }
		ruleDiskStateValue
		{ after(grammarAccess.getVariableValueAccess().getValueDiskStateValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValue__RefAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValueAccess().getRefVariableCrossReference_4_0()); }
		(
			{ before(grammarAccess.getVariableValueAccess().getRefVariableIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableValueAccess().getRefVariableIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getVariableValueAccess().getRefVariableCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskStateValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskStateValueAccess().getValueDISK_STATESEnumRuleCall_0()); }
		ruleDISK_STATES
		{ after(grammarAccess.getDiskStateValueAccess().getValueDISK_STATESEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiskSlotStateValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiskSlotStateValueAccess().getValueDISK_SLOT_STATESEnumRuleCall_0()); }
		ruleDISK_SLOT_STATES
		{ after(grammarAccess.getDiskSlotStateValueAccess().getValueDISK_SLOT_STATESEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorValueAccess().getValueCOLOREnumRuleCall_0()); }
		ruleCOLOR
		{ after(grammarAccess.getColorValueAccess().getValueCOLOREnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
